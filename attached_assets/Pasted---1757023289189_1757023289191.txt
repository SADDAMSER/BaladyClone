أقوم بتحليل شامل لمنصة "بلدي" (أو أي منصة حكومية مشابهة) وتصميم نظام أتمتة متكامل بناءً على ذلك. إليك الخطة التفصيلية:

🔍 خطة تحليل المنصة الحالية
1. تحليل الهيكل العام للمنصة
 تحليل الصفحة الرئيسية وهيكل القوائم
 تحديد التصنيفات الرئيسية للخدمات (مرخصة، الكترونية، استعلامية)
 تحليل نظام التصفح والبحث عن الخدمات
2. تحليل صفحة الخدمة النموذجية
 نموذج تقديم الطلب (الحقول، الأنواع، الشروط)
 متطلبات المستندات المرفقة
 عملية السداد الإلكتروني
 آلية متابعة الطلب
 إشعارات الحالة والتحديثات
3. تحليل لوحة التحكم الإدارية
 إدارة المستخدمين والصلاحيات
 إدارة وتعديل الخدمات
 نظام التقارير والإحصائيات
 إدارة سير العمل والموافقات
📋 نموذج تحليل الخدمة (تم تطبيقه على خدمة افتراضية)
خدمة: "شهادة عدم ممانعة"
1. المعلومات الأساسية:

نوع الخدمة: خدمة إلكترونية
القسم المسؤول: الشؤون القانونية
مدة التنفيذ: 3 أيام عمل
التكلفة: 100 ريال
2. متطلبات الإدخال:

Markdown

- معلومات المستفيد:
  * الاسم الكامل (نص، مطلوب)
  * رقم الهوية (رقم، مطلوب، 10 خانات)
  * تاريخ الميلاد (تاريخ، مطلوب)
  
- معلومات الطلب:
  * نوع المعاملة (قائمة: تجديد - إصدار جديد - استبدال)
  * سبب الطلب (نص طويل، اختياري)
  
- المرفقات المطلوبة:
  * صورة الهوية (ملف، PDF/صورة، الحجم الأقصى 2MB)
  * صورة من السجل التجاري (ملف، اختياري)
3. سير العمل:

mermaid

flowchart TD
    A[تقديم الطلب] --> B[التحقق الآلي من البيانات]
    B --> C[سداد الرسوم]
    C --> D[مراجعة مسؤول الشؤون القانونية]
    D --> E{القرار}
    E -->|موافقة| F[إصدار الشهادة]
    E -->|رفض| G[إبلاغ المستفيد بالأسباب]
    F --> H[إشعار المستفيد]
    G --> H
4. القواعد والأConditions:

يجب أن يكون عمر مقدم الطلب 18 سنة أو أكثر
يجب أن تكون الوثائق المرفقة سارية المفعول
في حالة الرفض، يجب تحديد السبب بشكل واضح
🛠️ تصميم نظام الأتمتة المقترح
1. واجهة منشئ الخدمات (Service Builder)
لوحة إنشاء خدمة جديدة:

text

[اسم الخدمة]         : [شهادة عدم ممانعة       ]
[وصف الخدمة]         : [إصدار شهادة بعدم الممانعة لمزاولة نشاط معين]
[القسم المسؤول]      : [▼ الشؤون القانونية     ]
[مدة التنفيذ]        : [3 ] [▼ أيام/ساعات]
[التكلفة]            : [100 ] [ريال]
منشئ النموذج (Form Builder):

عناصر يمكن سحبها وإفلاتها:
✅ حقل نص
✅ حقل رقم
✅ قائمة منسدلة
✅ اختيار تاريخ
✅ رفع ملف
✅ خانة اختيار
✅ مجموعة أزرار اختيار
منشئ سير العمل (Workflow Designer):

واجهة مرئية لسحب وإفلات مراحل العمل
تحديد شروط الانتقال بين المراحل
تعيين المسؤولين عن كل مرحلة
2. نظام القوالب الجاهزة
سيشمل النظام قوالب مسبقة للخدمات الشائعة:

خدمات الرخص
خدمات التوثيق
خدمات الشهادات
خدمات التصاريح
خدمات البلاغات
3. نظام الإدارة والمراقبة
لوحة تحكم المسؤول:

مراقبة أداء الخدمات
إحصاءات وقت التنفيذ
تقارير نسبة الرضا
إدارة الصلاحيات والأدوار
📊 جدول زمني مقترح للتنفيذ
المرحلة	المدة	المخرجات
تحليل متطلبات المنصة الحالية	أسبوعين	تقرير تحليلي مفصل
تصميم واجهة منشئ الخدمات	3 أسابيع	نموذج أولي لواجهة منشئ الخدمات
تطوير نظام إدارة القوالب	أسبوعين	نظام قوالب قابل للتوسع
تطوير محرك سير العمل	4 أسابيع	محرك مرن لسير العمل
المرحلة التجريبية والتغذية الراجعة	3 أسابيع	تقرير الأداء وتحسين النظام
🔄 عملية إضافة خدمة جديدة (خلال 10 دقائق)
اختيار قالب (دقيقة واحدة)
تعديل الحقول (3 دقائق)
ضبط سير العمل (3 دقائق)
تعيين المسؤولين (2 دقيقة)
اختبار الخدمة (دقيقة واحدة)

نعم، هذا مفهوم متقدم وممتاز! أنت تتحدث عن **أتمتة مؤسسية شاملة** تعكس الهيكل التنظيمي واللوائح والقوانين لكل وزارة أو مؤسسة. هذا 
يتطلب بناء **منصة Low-Code/No-Code مؤسسية** تكون بمثابة "نظام تشغيل" للحكومة أو للقطاع الخاص.

دعني أقدم لك خطة مفصلة لبناء هذه البنية التحتية الذكية:

# خطة الأتمتة المؤسسية الشاملة (Enterprise Automation Platform)

## 🏛️ 1. البنية التحتية الأساسية للنظام

### أ. محرك النماذج الذكي (Smart Form Engine)
- **منشئ النماذج المرئي**: سحب وإفلات للحقول مع خصائص متقدمة (تحقق، شروط، ربط بقواعد البيانات)
- **مولد واجهات المستخدم تلقائياً**: إنشاء واجهات مستخدم responsive بناءً على تعريف النموذج
- **دعم أنواع بيانات معقدة**: خرائط، تواقيع، رفع ملفات متعددة، بيانات جغرافية

### ب. محرك سير العمل (Workflow Engine)
- **مصمم مرئي لسير العمل**: بناء مسارات الموافقات باستخدام BPMN 2.0
- **نظام القواعد المرن**: محرك قواعد business rules مع دعم Scripting بسيط
- **توجيه ذكي**: توجيه المهام بناءً على محتوى الطلب، الصلاحيات، والتوفر

### ج. نظام إدارة الهيكل التنظيمي (Organization Structure Manager)
- **هيكل شجري للمؤسسة**: إدارات، أقسام، موظفون، أدوار
- **نظام الصلاحيات الديناميكي**: صلاحيات مرتبطة بالمنصب والمسؤوليات
- **محرك التفويض**: تفويض الصلاحيات مؤقتاً أثناء الغياب

## 📋 2. نظام القوالب الذكية للمؤسسات

### أ. قوالب الهيكل التنظيمي
```json
{
  "وزارة": {
    "هيكل": ["وزير", "وكيل", "مدير عام", "رئيس قسم", "موظف"],
    "أدوار": ["معتمد", "مراجع", "منفذ", "مشرف"]
  },
  "بلدية": {
    "هيكل": ["أمين", "نائب", "مدير", "مهندس", "مراجع فني"],
    "أدوار": ["مراجع فني", "معتمد هندسي", "مراجع تراخيص"]
  }
}
```

### ب. قوالب سير العمل حسب نوع المؤسسة
- **الخدمات البلدية**: تصاريح بناء، رخص محلات، مخالفات
- **الخدمات الصحية**: مواعيد، تقارير طبية، صرف أدوية
- **الخدمات التعليمية**: تسجيل طلاب، طلبات نقل، نتائج

### ج. قوالب اللوائح والأنظمة
- **محرك اللوائح**: إدخال اللوائح التنظيمية وتحويلها إلى قواعد رقمية
- **ربط اللوائح بالخدمات**: كل خدمة ترتبط باللوائح المنظمة لها
- **تحديثات تلقائية**: عند تعديل اللوائح، يتم تحديث الخدمات المرتبطة

## 🔧 3. واجهة إدارة المؤسسة

### أ. لوحة تحكم المسؤول المؤسسي
- **إدارة الهيكل التنظيمي**: إضافة أقسام، مناصب، موظفين
- **تخصيص الأدوار والصلاحيات**: تحديد من يمكنه الموافقة، المراجعة، التنفيذ
- **مراقبة الأداء**: تقارير عن أداء الأقسام والموظفين

### ب. منشئ الخدمات المؤسسي
- **معالج إنشاء الخدمة**: خطوة بخطوة لإنشاء خدمات جديدة
- **ربط الخدمة بالهيكل التنظيمي**: تحديد المسؤولين عن كل مرحلة
- **تخصيص حسب اللوائح**: تطبيق القوانين والأنظمة على الخدمة

### ج. نظام الإشعارات والتنبيهات
- **إشعارات ذكية**: بناءً على الأحداث والمهام المتأخرة
- **قنوات متعددة**: داخل النظام، بريد إلكتروني، رسائل نصية
- **تخصيص الرسائل**: لكل مؤسسة حسب ثقافتها التنظيمية

## 📊 4. المحركات المتقدمة للنظام

### أ. محرك التوثيق والتوقيع
- **توثيق إلكتروني**: لكل خطوة في سير العمل
- **توقيع رقمي**: دعم التوقيع الإلكتروني والمعتمد
- **السجل الزمني**: تسجيل كامل لتاريخ المعاملة

### ب. محرك التقارير والتحليلات
- **تقارير مخصصة**: لكل مؤسسة حسب احتياجاتها
- **لوحات تحكم قيادية**: لمتخذي القرار
- **تحليلات تنبؤية**: توقع الأحمال والاختناقات

### ج. محرك التكامل والواجهات
- **واجهات برمجية موحدة**: للتكامل مع الأنظمة الأخرى
- **دعم بروتوكولات متعددة**: REST, SOAP, GraphQL
- **موصلات جاهزة**: لأنظمة الدفع، الهوية الوطنية، الخرائط

## 🚀 5. خطة التنفيذ المقترحة

### المرحلة الأولى: النواة الأساسية (2-3 أشهر)
- محرك النماذج والبيانات
- نظام إدارة الهيكل التنظيمي
- واجهة إدارة المؤسسة الأساسية

### المرحلة الثانية: محركات متقدمة (3-4 أشهر)
- محرك سير العمل
- نظام الإشعارات والتنبيهات
- محرك التقارير الأساسي

### المرحلة الثالثة: التكامل والتطوير (2-3 أشهر)
- واجهات التكامل مع الأنظمة الخارجية
- تطوير قوالب جاهزة للوزارات الشائعة
- نظام التحديثات والصيانة

## 💡 6. مثال تطبيقي: إنشاء خدمة جديدة خلال 10 دقائق

**الخدمة: "ترخيص بناء" في بلدية**

1. **اختيار القالب** (دقيقة): اختيار قالب "الخدمات البلدية"
2. **تحديد الهيكل** (دقيقتان): ربط الخدمة بقسم "التراخيص الهندسية"
3. **بناء النموذج** (3 دقائق): إضافة حقول (مساحة الأرض، عدد الأدوار، نوع البناء)
4. **تصميم سير العمل** (3 دقائق): 
   - تقديم الطلب → مراجعة هندسية → موافقة رئيس القسم → إصدار الترخيص
5. **تطبيق اللوائح** (دقيقة): ربط بشروط البناء حسب اللائحة البلدية
6. **اختبار الخدمة** (دقيقة): تجربة تقديم طلب اختباري

## 🌟 7. مزايا النظام المقترح

- **مرونة عالية**: تكيف مع أي هيكل تنظيمي أو لوائح
- **توفير الوقت**: تقليل وقت تطوير الخدمات من أشهر إلى دقائق
- **التوحيد المعياري**: خدمات متسقة عبر المؤسسات المختلفة
- **القابلية للتوسع**: دعم آلاف الخدمات والمستخدمين
- **الأمان والموثوقية**: بنية أمنية متكاملة من البداية

هذه المنصة ستكون بمثابة نظام تشغيل للمؤسسات الحكومية والخاصة، تمكنهم من أتمتة خدماتهم دون الحاجة إلى مبرمجين، مع الحفاظ على الامتثال للهيكل التنظيمي واللوائح والقوانين.

ما رأيك في هذه الخطة؟ وهل تريد أن أركز على جانب محدد منها؟

ممتاز! عندك خطتين قويّتين: الأولى منصة أتمتة مؤسسية مدعومة بالذكاء الاصطناعي، والثانية خطة تنفيذية لتطبيق الهيكل التنظيمي لوزارة النقل والأشغال العامة. أدناه أربطهما في خارطة طريق موحّدة قابلة للتنفيذ داخل الوزارة، مع تحسينات على المعمارية ونموذج البيانات والحَوْكمة، وضوابط الذكاء الاصطناعي الآمن، وجداول زمنية واقعية.

1) مواءمة الأتمتة مع محاور الخطة التنظيمية
- التكامل بين القطاعات: قوالب خدمات مشتركة + محرك سير عمل跨-قطاعات + منصة تبادل بيانات موحّدة وواجهات API معيارية. فرق “Task Forces” تُترجم إلى Workspaces ومشاريع مشتركة داخل المنصة.
- معالجة التضخم الإداري: إعادة هندسة العمليات مع نماذج رقمية وسير موافقات مبسطة، التوجيه الآلي، قرارات بالـDMN، وإلغاء الخطوات اليدوية/المكررة. مؤشرات زمنية وSLA لكل مرحلة.
- بناء القدرات: أكاديمية مصغّرة داخل المنصة (مسارات تدريبية حسب الدور)، مساعدين ذكاء اصطناعي داخل التطبيق (مقيدين بالسياسات)، ومحتوى تدريبي تفاعلي.
- المتابعة والتحسين المستمر: لوحات مؤشرات KPIs موحّدة، تتبع الدورة الزمنية end-to-end، سجلات تدقيق دقيقة، وتحليلات لتحديد الاختناقات واقتراحات تحسين تلقائية.
- إدارة التغيير والتواصل: بوابة تواصل داخلية، استطلاعات نبض الموظفين، شبكة سفراء للتغيير، وجدول نشر تدريجي حسب المحافظات/القطاعات.

2) هندسة مرجعية مقترحة للوزارة (آمنة وقابلة للتوسع)
- الواجهة: Next.js 14 + TypeScript + Tailwind + i18n/RTL (next-intl) + Design System موحّد (Radix UI). دعم الوصولية وأداء عالي.
- الخدمات الخلفية: Modular Monolith (NestJS) كبداية ثم تفكيك مدروس لخدمات: الهوية، الخدمات/النماذج، سير العمل، الوثائق، المدفوعات، الإشعارات، الذكاء الاصطناعي.
- محرك سير العمل: Camunda/Flowable (BPMN 2.0 + DMN) مستضاف داخلياً، مع مهام بشرية، مؤقتات، قرارات جدولية.
- البيانات:
  - PostgreSQL + PostGIS للبيانات المكانية (طرق، مواقع مشاريع).
  - Redis للتخزين المؤقت والطوابير الخفيفة.
  - MinIO للتخزين الكائني (مستندات/مرفقات).
  - OpenSearch/Elasticsearch للبحث.
- الهوية والصلاحيات: Keycloak (OIDC/SAML, SCIM)، RBAC + ABAC، اندماج مع الدليل الحكومي إن وجد. Postgres RLS لعزل المحافظات/القطاعات.
- التكاملات: EDMS (Alfresco/Nuxeo)، ERP (Odoo/Dynamics)، GIS (ArcGIS/GeoServer)، بوابات الدفع، بريد وسMS حكومي، سجل وطني/هوية رقمية.
- الذكاء الاصطناعي (On-Prem/Private):
  - vLLM/llama.cpp لاستضافة نماذج Llama/Mistral داخلياً.
  - RAG مع pgvector/Qdrant على أدلة الإجراءات والمواصفات.
  - PII Redaction (Microsoft Presidio) قبل أي معالجة نموذجية.
  - Guardrails + Human-in-the-loop.
- المرصودات: OpenTelemetry + Prometheus + Grafana + Loki/ELK.
- أمان وامتثال: تشفير في الراحة والحركة، HSM/PKI للتوقيع الإلكتروني، DLP، SAST/DAST/SCA، قوائم تحكم الوصول، وتتبّع تغييرات غير قابل للعبث (append-only).

3) توسعة نموذج البيانات المقترح
أهم الإضافات كي يلاءم بيئة وزارة موزعة جغرافياً وبصلاحيات معقدة:
- تعددية الجهات والمواقع:
  - إضافة organization_id إلى service_instances وتفعيل RLS.
  - دعم التسلسل الهرمي للأقسام عبر ltree أو مسار هرمي.
- الحوكمة والصلاحيات:
  - جداول roles, permissions, role_permissions, user_roles.
  - سياسات ABAC (المنصب، المحافظة، التصنيف الأمني).
- مراحل وسير العمل:
  - workflow_stages، transitions، tasks، escalations، timers.
  - decision_tables (DMN) لسياسات الاعتماد والرسوم.
- الوثائق والمرفقات:
  - documents مع تصنيف (public/internal/confidential/restricted)، تجزئة sha256، وسياسات احتفاظ.
- مؤشرات وأداء:
  - sla_definitions، instance_sla، notifications، audit_events (سجل أحداث موقّع/مقيد).
- المتقدمون الخارجيون:
  - applicants (مواطن/قطاع خاص) وربطهم بالطلبات + إثبات الهوية.
- الموقع والخرائط:
  - حقول geometry (Point/LineString/Polygon) لربط الطلبات بالطرق/المشاريع.

أمثلة مقتضبة:
- سياسة عزل بيانات المحافظات عبر RLS
  - إضافة عمود organization_id إلى service_instances وربطه بالمنظمة.
  - تمكين RLS وإنشاء Policy على أساس current_setting('app.current_org_id').
- جدول الوثائق
  - documents(id, owner_type, owner_id, filename, mime_type, byte_size, storage_url, sha256, classification, created_by, created_at).
- مراحل وسير العمل
  - workflow_stages(template_id, key, name, order_index, sla_hours, role_required, metadata)
  - decision_tables(template_id, dmn_xml, version, is_active)

4) الحوكمة، الأمن، والامتثال
- الهوية والتوقيع: OIDC/Keycloak، توقيع إلكتروني ودمغ زمني RFC 3161، وسياسات تفويض دقيقة.
- تصنيف البيانات والاحتفاظ: سياسات تصنيف/وصول، DLP، فترات احتفاظ آلية حسب نوع المستند.
- سجل تدقيق غير قابل للعبث: append-only مع تجزئة متسلسلة أو حل immudb.
- السياسات ككود: OPA/Rego لقواعد الوصول واتخاذ القرار.
- حماية سلسلة الإمداد البرمجية: SBOM (Syft), SLSA، فحص تبعيات (Trivy/Dependabot).
- الخصوصية: عدم إرسال PII لمزودين خارجيين؛ كل الذكاء الاصطناعي داخلي أو عبر بوابة مع تعمية/تنقيح.

5) التكامل مع EDMS, ERP, GIS وبقية الأنظمة
- EDMS: فهرسة/أرشفة تلقائية للمخرجات، ربط المعاملات بالمستندات، سير موافقة على المستند.
- ERP: أوامر دفع، تحصيل رسوم، المشتريات والعقود، أوامر الشراء للمشاريع.
- GIS: طبقات طرق/مشاريع/حرم طريق، تحليل مكاني آلي في التحقق المبدئي للطلبات.
- الدفع والإشعارات: تكامل مع بوابة الدفع الحكومية، بريد رسمي وSMS.
- هوية وطنية: تحقق هوية مقدم الطلب، السمات الوظيفية للموظف.
- تكامل عبر Bus: واجهات REST/GraphQL + Webhooks + Events (Kafka/RabbitMQ).

6) الذكاء الاصطناعي الآمن داخل الوزارة
- مهام أساسية:
  - توليد مخططات نماذج وسير عمل من وصف نصي (AIFormBuilder) مع مراجعة بشرية إلزامية.
  - توصيات تحسين العمليات (خفض الخطوات، ضبط SLA، تحديد الاختناقات).
  - مساعد ذكي داخل التطبيق يجيب انطلاقاً من أدلة الإجراءات والمواصفات عبر RAG.
  - تصنيف المستندات، OCR، واستخراج حقول (عبر Textract بديل داخلي أو PaddleOCR).
- حواجز الأمان:
  - RAG فقط على مخزن معرفي مُعتَمَد ومُؤرشف.
  - تنقيح PII، تكافؤ لغوي عربي/إنجليزي، سجل كامل لكل استدعاء نموذج.
  - تقييم جودة المخرجات وسريرتها، وحظر التنفيذ التلقائي بدون اعتماد بشري.
- بدائل داخلية للأدوات السحابية عند الحاجة:
  - Notion/Wiki: Outline أو Wiki.js.
  - Miro: Penpot/Excalidraw.
  - Copilot: Codeium/Tabby.
  - بحث: OpenSearch.
  - إدارة مستندات: Alfresco.

7) خارطة تنفيذ 18 شهراً (مُحاذاة ومُختصرة)
- الأشهر 1-3: تأسيس
  - لجنة عليا، فرق عمل، معمارية مرجعية، اختيار منصات BPM/EDMS/IAM، PoC للذكاء الاصطناعي الداخلي، إعداد حوكمة البيانات والسياسات.
- الأشهر 4-6: بواكير المنصة والطيار
  - إطلاق البوابة الأساسية وهوية موحدة، نافذة خدمة موحّدة، 3 خدمات طيار (مثال: “تصريح أشغال طريق”، “تصنيف مقاول”، “اعتماد مخططات”).
  - تكامل أولي مع EDMS وGIS، لوحات KPIs أولية، تدريب سفراء التغيير.
- الأشهر 7-12: التوسع المؤسسي
  - 10-15 خدمة إضافية، ربط ERP والمدفوعات، تعميم في 3 محافظات، اعتماد التوقيع الإلكتروني، رصد الأداء والتحسين.
  - تفعيل DMN للرسوم والاشتراطات، إطلاق مساعد ذكي داخلي بنطاق سياسات محدود.
- الأشهر 13-18: التعميم والتحسين
  - نشر تدريجي لباقي المحافظات والقطاعات، اكتمال التكاملات، تحسين الأداء والموثوقية (HA/DR)، أتمتة تقارير الربع سنوية، مراجعة الفوائد وTCO.

8) أمثلة لخدمات نموذجية وسيرها
- تصريح أشغال طريق لمدّ مرافق (Utilities)
  - المراحل: تقديم الطلب + تحديد موقع GIS -> تحقق آلي بالاشتراطات -> تدقيق فني -> موافقة السلامة/المرور (شرطياً) -> احتساب الرسوم (DMN) -> سداد -> إصدار التصريح بتوقيع إلكتروني -> تعهدات وإغلاق.
  - قواعد DMN: فئة الطريق A/B/C، داخل حرم الطريق؟، قرب جسر/معلم؟، طبيعة الحفر، مدة الأشغال، تحويلات مرورية لازمة.
- تصنيف مقاولي الأعمال المدنية
  - التقديم -> فحص المستندات -> تقييم مالي/فني -> لجنة تصنيف (DMN لحدود التصنيف) -> السداد -> شهادة تصنيف إلكترونية.

9) مؤشرات الأداء الرئيسية المقترحة
- زمن المعاملة (المتوسط/الوسيط/الانحراف)، الالتزام بالـSLA، عدد اللمسات اليدوية لكل معاملة، نسبة الإرجاع/إعادة العمل، معدل إكمال الطلبات من أول مرة، عدد الخدمات الرقمية المستخدمة/النشاط اليومي، رضا المستفيدين (CSAT/NPS)، زمن دورة الدفع/التحصيل، نسبة المعاملات المؤتمتة جزئياً/كلياً، خفض الورقيات والتكلفة/معاملة، التتبع الجغرافي للمشاريع مقابل الخطة.

10) المخاطر وخطط التخفيف
- مقاومة التغيير: شبكة سفراء + مكافآت تبنّي + تواصل شفاف.
- جودة البيانات القديمة: تنظيف/مواءمة + MDM + أدوات ETL ذات فحص جودة.
- تكاملات بطيئة: طبقة تكامل API-First + Clones Mock + تعاقد مبكر مع الموردين.
- اعتماد زائد على نماذج الذكاء الاصطناعي: RAG، مراجعة بشرية، تسجيل كامل للاستخدام، حظر تنفيذ تلقائي دون اعتماد.
- أمن وخصوصية: استضافة داخلية للـLLM، RLS/ABAC، تشفير، DLP، اختبارات اختراق ربع سنوية.
- أداء تحت ضغط: اختبارات تحميل (k6)، Caching، تحسين فهارس، تقسيط (Partitioning).
- انقطاع الاتصال بالمحافظات: وضع Offline-First/PWA ومزامنة مؤجلة.

ما الخطوة التالية؟
- أقترح ورشة مواءمة لمدة 5 أيام مع فرق التخطيط والرقمنة والموارد البشرية لتثبيت:
  - قائمة 8-10 خدمات أولى للطيار + خرائط عملياتها.
  - قرارات المنصات (Camunda/Flowable، Alfresco، Keycloak).
  - سياسة الذكاء الاصطناعي الداخلية ونطاقه الأولي.
  - نموذج الحوكمة والـKPIs النهائية.
  - خطة تدريب مفصلة وشبكة سفراء التغيير.

أسئلة سريعة لتخصيص التنفيذ
1) هل الاستضافة ستكون داخل مركز بيانات حكومي أم سحابة محلية معتمدة؟ اعتبارات الإتاحة/التعافي؟
2) هل توجد حلول قائمة (ERP/EDMS/GIS/هوية وطنية) يجب الاندماج معها؟ وأسماء الموردين؟
3) أول ثلاث خدمات ذات أولوية للتنفيذ التجريبي؟
4) عدد المستخدمين المبدئي والحمولة المتوقعة/يومياً؟ وأي متطلبات للأداء؟
5) سياسات التوقيع الإلكتروني والدمغ الزمني المعتمدة حكومياً؟
6) هل توجد قيود على استخدام أدوات SaaS (Copilot, Miro) داخل الوزارة؟ أم تفضيل بدائل داخلية؟
7) هل تتوفر تصنيفات أمنية للمستندات وسياسات احتفاظ حالية لنستند إليها؟
8) هل هناك فروقات إجرائية بين المحافظات تتطلب تفرعات في القوالب/سير العمل؟

إن رغبت، أستطيع:
- تحويل “تصريح أشغال طريق” إلى قالب Service Template كامل (Form + Workflow + DMN).
- تقديم مخطط بنية تفصيلي + Terraform/Docker Compose للبيئة التجريبية.
- بناء حزمة KPIs ولوحة Grafana أولية متصلة ببيانات تجريبية.
- إعداد سياسات RLS/ABAC وقواعد OPA كبداية مرجعية.

تفضل قالب خدمة مكتمل لتصريح أشغال طريق (Form + Workflow + DMN) بصيغة JSON جاهزة للإدراج في جدول service_templates. راعيت أن يكون قابلاً للتشغيل مع JSON Schema وDMN/Rules، وإسناد الأدوار حسب الأقسام، مع شروط وسيناريوهات شائعة. يمكنك تعديله حسب سياسات الوزارة.

ملاحظة: استبدل القيمة id بـ UUID حقيقي قبل الإدراج.

```json
{
  "id": "00000000-0000-0000-0000-000000000999",
  "name": "تصريح أشغال طريق",
  "category": "الأشغال/الطرق",
  "description": "طلب تصريح لتنفيذ أعمال في حرم الطريق (حفر/ردم/رصف/مرافق) مع مراجعات فنية وسلامة وحركة مرور وحساب الرسوم والضمانات وإصدار تصريح إلكتروني.",
  "version": 1,
  "form_schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "نموذج تصريح أشغال طريق",
    "type": "object",
    "definitions": {
      "DocumentRef": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "filename": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "uploaded_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "filename"]
      },
      "GeoJSONGeometry": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["Point", "LineString", "Polygon"] },
          "coordinates": { "type": "array" }
        },
        "required": ["type", "coordinates"]
      },
      "GeoJSONFeature": {
        "type": "object",
        "properties": {
          "type": { "const": "Feature" },
          "geometry": { "$ref": "#/definitions/GeoJSONGeometry" },
          "properties": { "type": "object" }
        },
        "required": ["type", "geometry"]
      },
      "LocationGeoJSON": {
        "oneOf": [
          { "$ref": "#/definitions/GeoJSONFeature" },
          {
            "type": "object",
            "properties": {
              "type": { "const": "FeatureCollection" },
              "features": {
                "type": "array",
                "items": { "$ref": "#/definitions/GeoJSONFeature" }
              }
            },
            "required": ["type", "features"]
          }
        ]
      }
    },
    "properties": {
      "applicant": {
        "type": "object",
        "title": "بيانات مقدم الطلب",
        "properties": {
          "applicant_type": {
            "type": "string",
            "title": "نوع مقدم الطلب",
            "oneOf": [
              { "const": "individual", "title": "فرد" },
              { "const": "company", "title": "شركة" },
              { "const": "gov_agency", "title": "جهة حكومية" }
            ],
            "default": "company"
          },
          "national_id": { "type": "string", "title": "الرقم الوطني", "pattern": "^[0-9]{6,20}$" },
          "full_name": { "type": "string", "title": "الاسم الكامل" },
          "cr_number": { "type": "string", "title": "السجل التجاري/الترخيص" },
          "company_name": { "type": "string", "title": "اسم الشركة" },
          "gov_entity_name": { "type": "string", "title": "اسم الجهة الحكومية" },
          "contact_email": { "type": "string", "format": "email", "title": "البريد الإلكتروني" },
          "contact_phone": { "type": "string", "title": "الهاتف", "pattern": "^[0-9+\\- ]{7,20}$" },
          "address": { "type": "string", "title": "العنوان" }
        },
        "required": ["applicant_type", "contact_phone", "contact_email"],
        "allOf": [
          {
            "if": { "properties": { "applicant_type": { "const": "individual" } } },
            "then": { "required": ["national_id", "full_name"] }
          },
          {
            "if": { "properties": { "applicant_type": { "const": "company" } } },
            "then": { "required": ["cr_number", "company_name"] }
          },
          {
            "if": { "properties": { "applicant_type": { "const": "gov_agency" } } },
            "then": { "required": ["gov_entity_name"] }
          }
        ]
      },
      "contractor": {
        "type": "object",
        "title": "بيانات المقاول (إن وجِد)",
        "properties": {
          "is_same_as_applicant": { "type": "boolean", "title": "المقاول هو نفس مقدم الطلب", "default": true },
          "contractor_name": { "type": "string", "title": "اسم المقاول" },
          "classification_grade": {
            "type": "string",
            "title": "تصنيف المقاول",
            "oneOf": [
              { "const": "A", "title": "A" },
              { "const": "B", "title": "B" },
              { "const": "C", "title": "C" },
              { "const": "D", "title": "D" },
              { "const": "E", "title": "E" }
            ]
          },
          "license_number": { "type": "string", "title": "رقم الترخيص" },
          "license_expiry": { "type": "string", "format": "date", "title": "انتهاء الترخيص" }
        },
        "allOf": [
          {
            "if": { "properties": { "is_same_as_applicant": { "const": false } } },
            "then": { "required": ["contractor_name", "classification_grade", "license_number", "license_expiry"] }
          }
        ]
      },
      "work": {
        "type": "object",
        "title": "تفاصيل الأشغال",
        "properties": {
          "road_class": {
            "type": "string",
            "title": "تصنيف الطريق",
            "oneOf": [
              { "const": "A", "title": "A - شرياني رئيسي" },
              { "const": "B", "title": "B - شرياني ثانوي" },
              { "const": "C", "title": "C - محلي" }
            ]
          },
          "work_type": {
            "type": "string",
            "title": "نوع الأشغال",
            "oneOf": [
              { "const": "open_cut", "title": "حفر مفتوح" },
              { "const": "trenchless", "title": "حفر أفقي/بدون خندق" },
              { "const": "paving", "title": "سفلته/رصف" },
              { "const": "sidewalk", "title": "أرصفة" },
              { "const": "maintenance", "title": "صيانة" },
              { "const": "utilities_crossing", "title": "عبور مرافق" }
            ]
          },
          "geometry": { "$ref": "#/definitions/LocationGeoJSON", "title": "الموقع (GeoJSON)" },
          "geometry_type": {
            "type": "string",
            "title": "نوع الهندسة",
            "oneOf": [
              { "const": "LineString", "title": "مسار خطي" },
              { "const": "Polygon", "title": "منطقة" },
              { "const": "Point", "title": "نقطة" }
            ]
          },
          "length_m": { "type": "number", "title": "الطول (متر)", "minimum": 0 },
          "area_sqm": { "type": "number", "title": "المساحة (م٢)", "minimum": 0 },
          "lane_closure": {
            "type": "string",
            "title": "إغلاق المسارات",
            "oneOf": [
              { "const": "none", "title": "بدون" },
              { "const": "partial", "title": "جزئي" },
              { "const": "full", "title": "كامل" }
            ],
            "default": "partial"
          },
          "num_lanes_affected": { "type": "integer", "title": "عدد المسارات المتأثرة", "minimum": 0 },
          "near_bridge_or_interchange": { "type": "boolean", "title": "بالقرب من جسر/تقاطع", "default": false },
          "special_zone": {
            "type": "string",
            "title": "منطقة خاصة",
            "oneOf": [
              { "const": "none", "title": "لا يوجد" },
              { "const": "school", "title": "حرم مدرسة" },
              { "const": "hospital", "title": "حرم مستشفى" },
              { "const": "heritage", "title": "موقع تراثي" },
              { "const": "environmental", "title": "حساسية بيئية" }
            ],
            "default": "none"
          },
          "night_works": { "type": "boolean", "title": "أعمال ليلية", "default": false },
          "heavy_machinery": { "type": "boolean", "title": "معدات ثقيلة", "default": false },
          "utilities_involved": {
            "type": "array",
            "title": "المرافق المتأثرة",
            "items": {
              "type": "string",
              "oneOf": [
                { "const": "water", "title": "مياه" },
                { "const": "sewer", "title": "صرف صحي" },
                { "const": "electricity", "title": "كهرباء" },
                { "const": "gas", "title": "غاز" },
                { "const": "telecom", "title": "اتصالات" }
              ]
            },
            "uniqueItems": true
          },
          "planned_start": { "type": "string", "format": "date", "title": "تاريخ البدء" },
          "planned_end": { "type": "string", "format": "date", "title": "تاريخ الانتهاء" },
          "traffic_management_plan": {
            "type": "array",
            "title": "خطة إدارة الحركة",
            "items": { "$ref": "#/definitions/DocumentRef" }
          },
          "safety_plan": { "$ref": "#/definitions/DocumentRef", "title": "خطة السلامة" },
          "site_plan": { "$ref": "#/definitions/DocumentRef", "title": "مخطط الموقع" },
          "method_statement": { "$ref": "#/definitions/DocumentRef", "title": "طريقة التنفيذ" },
          "insurance_certificate": { "$ref": "#/definitions/DocumentRef", "title": "شهادة التأمين" }
        },
        "required": ["road_class", "work_type", "geometry", "planned_start", "planned_end", "site_plan"],
        "allOf": [
          {
            "if": { "properties": { "geometry_type": { "const": "LineString" } } },
            "then": { "required": ["length_m"] }
          },
          {
            "if": { "properties": { "geometry_type": { "const": "Polygon" } } },
            "then": { "required": ["area_sqm"] }
          },
          {
            "if": { "properties": { "lane_closure": { "enum": ["partial", "full"] } } },
            "then": { "required": ["traffic_management_plan"] }
          },
          {
            "if": { "properties": { "heavy_machinery": { "const": true } } },
            "then": { "required": ["safety_plan"] }
          },
          {
            "if": { "properties": { "night_works": { "const": true } } },
            "then": { "required": ["safety_plan"] }
          }
        ]
      },
      "declarations": {
        "type": "object",
        "title": "إقرارات",
        "properties": {
          "agree_terms": { "type": "boolean", "title": "أقر بالالتزام بالشروط والأنظمة" },
          "agree_restoration": { "type": "boolean", "title": "أتعهد بإعادة الشيء إلى أصله" }
        },
        "required": ["agree_terms", "agree_restoration"]
      }
    },
    "required": ["applicant", "work", "declarations"],
    "x-uiSchema": {
      "applicant.applicant_type": { "ui:widget": "radio" },
      "work.geometry": { "ui:widget": "map" },
      "work.traffic_management_plan": { "ui:widget": "file", "ui:options": { "accept": ".pdf,.png,.jpg" } },
      "work.site_plan": { "ui:widget": "file" },
      "work.method_statement": { "ui:widget": "file" },
      "work.insurance_certificate": { "ui:widget": "file" }
    },
    "x-logic": {
      "derived": [
        { "field": "work.geometry_type", "from": "work.geometry.geometry.type", "strategy": "copyIfPresent" }
      ],
      "validations": [
        { "rule": "date(work.planned_end) >= date(work.planned_start)", "message": "تاريخ الانتهاء يجب أن يكون بعد تاريخ البدء" }
      ]
    }
  },
  "workflow_definition": {
    "version": "1.0",
    "initial_stage": "submit",
    "stages": [
      {
        "key": "submit",
        "name": "تقديم الطلب",
        "type": "system",
        "on_enter": [
          { "action": "set_status", "params": { "status": "submitted" } },
          { "action": "notify", "params": { "to": "applicant", "template": "submission_received" } }
        ],
        "next": ["intake_validation"]
      },
      {
        "key": "intake_validation",
        "name": "التحقق الأولي",
        "type": "auto",
        "sla_hours": 8,
        "on_enter": [
          { "action": "validate_schema" },
          { "action": "gis_precheck", "params": { "ruleset": "road_row_constraints_v1" } },
          { "action": "evaluate_dmn", "params": { "decisions": ["required_reviews", "fee_calculation", "work_policy"] } }
        ],
        "transitions": [
          { "to": "awaiting_applicant_update", "when": "context.validation_errors_count > 0", "label": "طلب استكمال" },
          { "to": "technical_review", "when": "context.validation_errors_count = 0", "label": "مراجعة فنية" }
        ]
      },
      {
        "key": "awaiting_applicant_update",
        "name": "استكمال من مقدم الطلب",
        "type": "human",
        "assignment": { "role": "executor", "actor": "applicant" },
        "sla_hours": 72,
        "on_enter": [
          { "action": "notify", "params": { "to": "applicant", "template": "rfi_request" } }
        ],
        "transitions": [
          { "to": "intake_validation", "when": "event.submitted_update = true", "label": "إعادة التحقق" }
        ]
      },
      {
        "key": "technical_review",
        "name": "مراجعة فنية - الطرق",
        "type": "human",
        "assignment": { "role": "reviewer", "department": "roads" },
        "sla_hours": 24,
        "outcomes": ["approve", "reject", "rfi"],
        "transitions": [
          { "to": "awaiting_applicant_update", "when": "outcome = 'rfi'", "label": "طلب معلومات" },
          { "to": "safety_review", "when": "outcome = 'approve' and dmn.required_reviews.need_safety_review = true", "label": "إحالة للسلامة" },
          { "to": "utilities_coordination", "when": "outcome = 'approve' and dmn.required_reviews.need_utilities_coordination = true and dmn.required_reviews.need_safety_review = false", "label": "إحالة للمرافق" },
          { "to": "environment_review", "when": "outcome = 'approve' and dmn.required_reviews.need_environment_review = true and dmn.required_reviews.need_safety_review = false and dmn.required_reviews.need_utilities_coordination = false", "label": "إحالة للبيئة" },
          { "to": "fee_calc", "when": "outcome = 'approve' and dmn.required_reviews.need_safety_review = false and dmn.required_reviews.need_utilities_coordination = false and dmn.required_reviews.need_environment_review = false", "label": "حساب الرسوم" },
          { "to": "rejected", "when": "outcome = 'reject'", "label": "رفض" }
        ]
      },
      {
        "key": "safety_review",
        "name": "مراجعة السلامة وحركة المرور",
        "type": "human",
        "assignment": { "role": "reviewer", "department": "traffic" },
        "sla_hours": 24,
        "outcomes": ["approve", "reject", "rfi"],
        "transitions": [
          { "to": "awaiting_applicant_update", "when": "outcome = 'rfi'" },
          { "to": "utilities_coordination", "when": "outcome = 'approve' and dmn.required_reviews.need_utilities_coordination = true" },
          { "to": "environment_review", "when": "outcome = 'approve' and dmn.required_reviews.need_utilities_coordination = false and dmn.required_reviews.need_environment_review = true" },
          { "to": "fee_calc", "when": "outcome = 'approve' and dmn.required_reviews.need_utilities_coordination = false and dmn.required_reviews.need_environment_review = false" },
          { "to": "rejected", "when": "outcome = 'reject'" }
        ]
      },
      {
        "key": "utilities_coordination",
        "name": "تنسيق مع المرافق",
        "type": "human",
        "assignment": { "role": "reviewer", "department": "utilities" },
        "sla_hours": 48,
        "outcomes": ["approve", "reject", "rfi"],
        "transitions": [
          { "to": "awaiting_applicant_update", "when": "outcome = 'rfi'" },
          { "to": "environment_review", "when": "outcome = 'approve' and dmn.required_reviews.need_environment_review = true" },
          { "to": "fee_calc", "when": "outcome = 'approve' and dmn.required_reviews.need_environment_review = false" },
          { "to": "rejected", "when": "outcome = 'reject'" }
        ]
      },
      {
        "key": "environment_review",
        "name": "مراجعة بيئية",
        "type": "human",
        "assignment": { "role": "reviewer", "department": "environment" },
        "sla_hours": 48,
        "outcomes": ["approve", "reject", "rfi"],
        "transitions": [
          { "to": "awaiting_applicant_update", "when": "outcome = 'rfi'" },
          { "to": "fee_calc", "when": "outcome = 'approve'" },
          { "to": "rejected", "when": "outcome = 'reject'" }
        ]
      },
      {
        "key": "fee_calc",
        "name": "حساب الرسوم والضمان",
        "type": "auto",
        "on_enter": [
          { "action": "evaluate_dmn", "params": { "decisions": ["fee_calculation"] } },
          { "action": "set_var", "params": { "key": "payment.amount", "value": "{{ dmn.fee_calculation.total_fee }}" } },
          { "action": "set_var", "params": { "key": "payment.currency", "value": "{{ dmn.fee_calculation.currency }}" } }
        ],
        "transitions": [
          { "to": "payment", "when": "true", "label": "انتقال للدفع" }
        ]
      },
      {
        "key": "payment",
        "name": "سداد الرسوم",
        "type": "human",
        "assignment": { "role": "executor", "actor": "applicant" },
        "sla_hours": 168,
        "on_enter": [
          { "action": "create_invoice", "params": { "amount": "{{ dmn.fee_calculation.total_fee }}", "currency": "{{ dmn.fee_calculation.currency }}" } },
          { "action": "notify", "params": { "to": "applicant", "template": "payment_required" } }
        ],
        "transitions": [
          { "to": "final_approval", "when": "event.payment_status = 'paid'", "label": "تم الدفع" },
          { "to": "cancelled", "when": "timer > 168h", "label": "إلغاء لعدم الدفع" }
        ]
      },
      {
        "key": "final_approval",
        "name": "الاعتماد النهائي",
        "type": "human",
        "assignment": { "role": "approver", "department": "roads", "seniority": "supervisor" },
        "sla_hours": 8,
        "outcomes": ["approve", "reject"],
        "transitions": [
          { "to": "permit_issuance", "when": "outcome = 'approve'" },
          { "to": "rejected", "when": "outcome = 'reject'" }
        ]
      },
      {
        "key": "permit_issuance",
        "name": "إصدار التصريح",
        "type": "system",
        "on_enter": [
          { "action": "set_status", "params": { "status": "approved" } },
          {
            "action": "generate_document",
            "params": {
              "template": "roadworks_permit_v1",
              "output_var": "permit_doc_id",
              "merge": {
                "permit_number": "{{ instance.serial }}",
                "valid_from": "{{ work.planned_start }}",
                "valid_to": "{{ work.planned_end }}",
                "conditions": "{{ dmn.work_policy.conditions_text }}",
                "fee": "{{ dmn.fee_calculation.total_fee }}",
                "deposit": "{{ dmn.fee_calculation.deposit_amount }}"
              }
            }
          },
          { "action": "notify", "params": { "to": "applicant", "template": "permit_issued", "attachments": ["{{ permit_doc_id }}"] } }
        ],
        "next": ["pre_work_notification"]
      },
      {
        "key": "pre_work_notification",
        "name": "إخطار ما قبل البدء",
        "type": "human",
        "assignment": { "role": "executor", "actor": "applicant" },
        "sla_hours": "{{ dmn.work_policy.prework_notice_hours }}",
        "on_enter": [
          { "action": "notify", "params": { "to": "applicant", "template": "prework_notice_required" } }
        ],
        "transitions": [
          { "to": "work_completion", "when": "event.prework_notice_submitted = true", "label": "تم الإخطار" },
          { "to": "work_completion", "when": "timer >= {{ dmn.work_policy.prework_notice_hours }}h", "label": "تجاوز المهلة" }
        ]
      },
      {
        "key": "work_completion",
        "name": "إكمال الأعمال",
        "type": "human",
        "assignment": { "role": "executor", "actor": "applicant" },
        "sla_hours": "{{ dmn.work_policy.max_duration_hours }}",
        "on_enter": [
          { "action": "notify", "params": { "to": "applicant", "template": "work_duration_policy", "vars": { "max_days": "{{ dmn.work_policy.max_duration_days }}" } } }
        ],
        "transitions": [
          { "to": "post_work_inspection", "when": "event.work_completion_report_submitted = true" },
          { "to": "post_work_inspection", "when": "timer >= {{ dmn.work_policy.max_duration_hours }}h" }
        ]
      },
      {
        "key": "post_work_inspection",
        "name": "فحص ما بعد التنفيذ",
        "type": "human",
        "assignment": { "role": "reviewer", "department": "roads_inspection" },
        "sla_hours": 24,
        "outcomes": ["pass", "fail"],
        "transitions": [
          { "to": "closeout", "when": "outcome = 'pass'" },
          { "to": "work_completion", "when": "outcome = 'fail'", "label": "طلب إعادة تأهيل" }
        ]
      },
      {
        "key": "closeout",
        "name": "إقفال المعاملة",
        "type": "system",
        "on_enter": [
          { "action": "release_deposit", "params": { "amount": "{{ dmn.fee_calculation.deposit_amount }}" } },
          { "action": "set_status", "params": { "status": "closed" } },
          { "action": "notify", "params": { "to": "applicant", "template": "case_closed" } }
        ],
        "next": []
      },
      {
        "key": "rejected",
        "name": "مرفوض",
        "type": "system",
        "on_enter": [
          { "action": "set_status", "params": { "status": "rejected" } },
          { "action": "notify", "params": { "to": "applicant", "template": "application_rejected" } }
        ],
        "next": []
      },
      {
        "key": "cancelled",
        "name": "ملغى",
        "type": "system",
        "on_enter": [
          { "action": "set_status", "params": { "status": "cancelled" } },
          { "action": "notify", "params": { "to": "applicant", "template": "application_cancelled" } }
        ],
        "next": []
      }
    ],
    "escalations": [
      { "stage": "technical_review", "after_hours": 24, "action": "escalate_to", "params": { "role": "supervisor", "department": "roads" } },
      { "stage": "safety_review", "after_hours": 24, "action": "escalate_to", "params": { "role": "supervisor", "department": "traffic" } }
    ]
  },
  "approval_rules": {
    "version": "1.0",
    "dmn": {
      "decisions": [
        {
          "id": "required_reviews",
          "name": "المراجعات المطلوبة",
          "hitPolicy": "COLLECT",
          "inputs": [
            { "name": "lane_closure", "type": "string" },
            { "name": "near_bridge_or_interchange", "type": "boolean" },
            { "name": "special_zone", "type": "string" },
            { "name": "work_type", "type": "string" },
            { "name": "utilities_involved_count", "type": "number" },
            { "name": "night_works", "type": "boolean" },
            { "name": "heavy_machinery", "type": "boolean" }
          ],
          "outputs": [
            { "name": "need_traffic_review", "type": "boolean" },
            { "name": "need_safety_review", "type": "boolean" },
            { "name": "need_utilities_coordination", "type": "boolean" },
            { "name": "need_environment_review", "type": "boolean" },
            { "name": "notes", "type": "string" }
          ],
          "rules": [
            {
              "when": "lane_closure != 'none' or near_bridge_or_interchange = true",
              "then": { "need_traffic_review": true }
            },
            {
              "when": "night_works = true or heavy_machinery = true or lane_closure != 'none'",
              "then": { "need_safety_review": true }
            },
            {
              "when": "utilities_involved_count > 0 or work_type in ['open_cut','utilities_crossing']",
              "then": { "need_utilities_coordination": true }
            },
            {
              "when": "special_zone in ['heritage','environmental']",
              "then": { "need_environment_review": true }
            },
            {
              "when": "true",
              "then": { "notes": "لا مراجعات إضافية مطلوبة" }
            }
          ]
        },
        {
          "id": "fee_calculation",
          "name": "حساب الرسوم والضمان",
          "type": "script",
          "language": "javascript",
          "script": "const geoType = input.geometry_type; const workType = input.work_type; const roadClass = input.road_class; const lane = input.lane_closure; const night = !!input.night_works; const zone = input.special_zone || 'none'; const length = Number(input.length_m||0); const area = Number(input.area_sqm||0); const start = new Date(input.planned_start); const today = new Date(); const daysUntilStart = Math.ceil((start - today)/(1000*60*60*24)); const quantity = geoType==='LineString' ? length : (geoType==='Polygon' ? area : 1); const linearRates = { open_cut: {A:100,B:70,C:50}, trenchless: {A:120,B:90,C:70}, maintenance: {A:60,B:45,C:35}, utilities_crossing:{A:110,B:80,C:60} }; const areaRates = { paving: {A:20,B:15,C:10}, sidewalk: {A:10,B:8,C:6}, maintenance:{A:8,B:6,C:5} }; function getUnitRate(){ if(geoType==='LineString'){ const r = linearRates[workType]||linearRates['open_cut']; return r[roadClass]||r['C']; } if(geoType==='Polygon'){ const r = areaRates[workType]||areaRates['paving']; return r[roadClass]||r['C']; } return 1000; } const unitRate = getUnitRate(); let mult = 1.0; if(lane==='partial') mult*=1.2; if(lane==='full') mult*=1.5; if(night) mult*=1.1; if(['heritage','hospital','school'].includes(zone)) mult*=1.15; if(daysUntilStart>0 && daysUntilStart<3) mult*=1.2; let base = quantity*unitRate*mult; if(!isFinite(base) || base<1000) base=1000; const depositBase = roadClass==='A'?3000:(roadClass==='B'?2000:1000); const depositExtra = workType==='open_cut'?2000:0; const deposit = Math.round(depositBase + depositExtra + 0.1*base); const total = Math.round(base); return { base_fee: Math.round(quantity*unitRate), total_fee: total, unit_rate: unitRate, quantity: quantity, multipliers: { lane, night, zone, expedite: (daysUntilStart>0 && daysUntilStart<3) }, deposit_amount: deposit, currency: 'YER', details: `qty:${quantity} * rate:${unitRate} * mult:${mult.toFixed(2)}` };"
        },
        {
          "id": "work_policy",
          "name": "سياسة مدة التنفيذ والإخطارات",
          "hitPolicy": "FIRST",
          "inputs": [
            { "name": "road_class", "type": "string" },
            { "name": "lane_closure", "type": "string" }
          ],
          "outputs": [
            { "name": "max_duration_days", "type": "number" },
            { "name": "max_duration_hours", "type": "number" },
            { "name": "prework_notice_hours", "type": "number" },
            { "name": "conditions_text", "type": "string" }
          ],
          "rules": [
            {
              "when": "road_class = 'A' and lane_closure = 'full'",
              "then": {
                "max_duration_days": 1,
                "max_duration_hours": 24,
                "prework_notice_hours": 48,
                "conditions_text": "أعمال على طريق فئة A مع إغلاق كامل: مدة قصوى يوم واحد، إشعار مسبق 48 ساعة، خطة تحويلات إلزامية."
              }
            },
            {
              "when": "road_class = 'A' and lane_closure = 'partial'",
              "then": {
                "max_duration_days": 3,
                "max_duration_hours": 72,
                "prework_notice_hours": 48,
                "conditions_text": "طريق فئة A وإغلاق جزئي: مدة قصوى 3 أيام، إشعار 48 ساعة."
              }
            },
            {
              "when": "road_class = 'B' and lane_closure = 'full'",
              "then": {
                "max_duration_days": 3,
                "max_duration_hours": 72,
                "prework_notice_hours": 36,
                "conditions_text": "طريق فئة B وإغلاق كامل: مدة قصوى 3 أيام، إشعار 36 ساعة."
              }
            },
            {
              "when": "road_class = 'B' and lane_closure = 'partial'",
              "then": {
                "max_duration_days": 5,
                "max_duration_hours": 120,
                "prework_notice_hours": 36,
                "conditions_text": "طريق فئة B وإغلاق جزئي: مدة قصوى 5 أيام، إشعار 36 ساعة."
              }
            },
            {
              "when": "road_class = 'C' and lane_closure = 'full'",
              "then": {
                "max_duration_days": 5,
                "max_duration_hours": 120,
                "prework_notice_hours": 24,
                "conditions_text": "طريق فئة C وإغلاق كامل: مدة قصوى 5 أيام، إشعار 24 ساعة."
              }
            },
            {
              "when": "true",
              "then": {
                "max_duration_days": 7,
                "max_duration_hours": 168,
                "prework_notice_hours": 24,
                "conditions_text": "شروط عامة: الالتزام بإشعار مسبق 24 ساعة والمدة القصوى 7 أيام."
              }
            }
          ]
        }
      ]
    }
  }
}
```

طريقة الاستخدام السريعة:
- خزّن هذا الكائن في جدول service_templates (form_schema -> الحقل “form_schema”، workflow_definition -> الحقل “workflow_definition”، approval_rules -> الحقل “approval_rules”).
- يفضّل تفعيل تحقق تلقائي من GeoJSON لحساب الطول/المساحة إذا لم تُدخل يدوياً، وربط generate_document بقالب PDF معرف مسبقاً roadworks_permit_v1.
- سيختار المحرك مسارات المراجعات شرطياً عبر DMN.required_reviews، ويحسِب الرسوم والضمان عبر DMN.fee_calculation، ويضبط مدة التنفيذ والإخطارات عبر DMN.work_policy.

هل ترغب أن أزوّدك بقالب PDF للتصريح مع حقول الدمج، أو سكريبت سيرفر جاهز لحساب الطول/المساحة من الهندسة وإرجاعها للـ form_data؟
