المبدأ العام: سنتوقف عن التعديل على البنية الحالية، وسنتبنى الهيكل الثلاثي الأبعاد (جغرافي، إداري، طبقة ربط) كنواة جديدة للمشروع. الخطة ستكون على 3 مراحل رئيسية.

المرحلة الأولى: إعادة التأسيس والبناء على أساس جغرافي-إداري (3 أشهر)
الهدف: بناء الأساس الصلب الذي لا يمكن المساومة عليه. في نهاية هذه المرحلة، سيكون لدينا نظام بصلاحيات دقيقة تعتمد على الموقع الجغرافي، حتى لو كانت الخدمات المتاحة لا تزال محدودة.

الأسبوع 1-4: تصميم وترحيل قاعدة البيانات:

المهمة: كتابة مخطط SQL جديد بالكامل يطبق بنية geo و org والجداول الرابطة (branch_coverage_areas, employee_scopes) التي اقترحتها.
المخرجات: ملف schema_v3.sql جديد يحل محل المخطط الحالي.
الترحيل: كتابة سكربت لترحيل البيانات الحالية (المستخدمين، الإدارات) إلى الهيكل الجديد.
الأسبوع 5-9: إعادة بناء طبقة الوصول للبيانات والمنطق الخلفي (Backend Refactoring):

المهمة: إعادة كتابة جزء كبير من الواجهة الخلفية (API) ليتوافق مع الهيكل الجديد.
التفاصيل:
تعديل كل استعلامات Drizzle في storage.ts لتعكس أسماء الجداول الجديدة.
إعادة برمجة منطق عرض البيانات. مثال: GET /api/applications يجب أن يقوم تلقائيًا بفلترة النتائج بناءً على النطاق الجغرافي للموظف المسجل دخوله.
إعادة برمجة منطق التكليف. مثال: POST /api/applications/:id/assign يجب أن يقترح الموظفين الذين يقع الطلب ضمن نطاقهم الجغرافي.
تضمين استعلامات PostGIS المكانية (ST_Intersects) في قلب منطق العمل.
الأسبوع 10-12: بناء واجهات الإدارة الأساسية للهيكل الجديد:

المهمة: تطوير واجهات أمامية للمسؤولين لإدارة الهيكل الجديد.
المخرجات:
صفحة لإدارة الفروع وتحديد نطاقات تغطيتها الجغرافية (واجهة لاختيار مديرية أو حي من الخريطة).
صفحة في ملف الموظف لتحديد نطاقه الجغرافي (واجهة لاختيار الأحياء أو الحارات التي يعمل فيها).
المرحلة الثانية: استكمال منصة الخدمات البلدية والإنشاءات (3 أشهر)
الهدف: بعد بناء الأساس الجغرافي الصلب، نعود لاستكمال بناء الخدمات البلدية المخطط لها، ولكن هذه المرة بالطريقة الصحيحة التي تستغل قوة نظام LBAC.

تطوير الخدمات الأساسية:

المهمة: التأكد من أن خدمة "القرار المساحي" و "رخصة البناء" تعملان بكفاءة كاملة فوق النظام الجديد.
مثال: لوحة تحكم "المهندس الميداني" يجب ألا تعرض له إلا الطلبات الواقعة ضمن نطاقه الجغرافي المحدد.
إضافة خدمات بلدية جديدة:

المهمة: إضافة خدمات جديدة مثل "طلب صيانة إنارة"، "شكوى نظافة"، "إصدار رخصة محل تجاري".
الفائدة: كل خدمة جديدة ستستفيد تلقائيًا من نظام التوجيه والتكليف الجغرافي الدقيق بدون الحاجة لبرمجة منطق تكليف مخصص لكل خدمة.
تطوير لوحات المعلومات الموجهة جغرافيًا:

المهمة: بناء لوحات معلومات للمدراء تعرض مؤشرات الأداء موزعة على الخريطة.
مثال: يمكن لمدير البلدية أن يرى على الخريطة "خريطة حرارية" (Heatmap) للطلبات المتأخرة أو عدد المخالفات في كل حي.
المرحلة الثالثة: التعميم والتحول إلى منصة شاملة (6 أشهر)
الهدف: تحقيق الرؤية النهائية للمشروع. الآن وبعد أن أصبح لدينا تطبيق بلديات ناضج ومبني على أساس صحيح، سنقوم باستخلاص المكونات العامة منه لبناء "المنصة الأم".

استخلاص وتجريد المكونات (Abstraction):

محرك النماذج: تحليل النماذج المستخدمة في المرحلة الثانية وتحويلها إلى "محرر نماذج" مرئي.
محرك سير العمل: تحليل مسارات العمل وتحويلها إلى "محرر سير عمل" مرئي.
بناء واجهة "باني الخدمات" (Service Builder):

المهمة: بناء الواجهة التي تسمح لموظف (غير مبرمج) من وزارة أخرى باختيار نموذج، ورسم سير عمل، وتحديد الرسوم، ونشر خدمة جديدة.
المشروع التجريبي الأول للتعميم:

المهمة: اختيار وزارة شريكة (مثل وزارة الصحة) والعمل معها لاستخدام "باني الخدمات" الجديد لإطلاق أول خدمة لهم (مثل "طلب ترخيص صيدلية") بدون كتابة أي كود برمجي جديد في الواجهة الخلفية.
النجاح: نجاح هذه الخطوة هو الإثبات العملي القاطع لنجاح المشروع بأكمله.
