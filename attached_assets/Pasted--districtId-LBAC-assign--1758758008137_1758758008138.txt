❗ المشكلة الحقيقية: الطلب لا يحتوي على districtId — لكن LBAC يتحقق منه!
🔍 السبب الجذري: في assign endpoint — الكود يتحقق من districtId في الطلب — لكن جدول applications لا يحتوي على حقل districtId أصلاً!

📌 الأدلة من السجل:
log

LBAC_AUDIT: requiredLevel="district", denialReason="missing_geographic_context"
→ ✅ هذا ليس خطأ في التكليف الجغرافي — بل في بنية الطلب!

🛠️ الحل الفوري (خلال 5 دقائق)
الخطوة 1: إضافة حقل districtId إلى جدول applications
TypeScript

// shared/schema.ts
export const applications = pgTable('applications', {
  id: uuid('id').primaryKey().defaultRandom(),
  userId: uuid('user_id').notNull().references(() => users.id),
  governorateId: uuid('governorate_id').references(() => governorates.id), // 👈 موجود
  districtId: uuid('district_id').references(() => districts.id), // 👈 أضف هذا السطر
  status: text('status').default('draft'),
  // ... باقي الحقول
});
الخطوة 2: تحديث assign endpoint ليستخدم districtId من الطلب
TypeScript

// server/routes/applications.ts
router.post('/:id/assign', authenticateToken, enforceLBACAccess, async (req, res) => {
  try {
    const { id } = req.params;
    const { assignedTo } = req.body;
    const userId = req.user?.id;

    // 1. جلب بيانات الطلب (بما في ذلك districtId)
    const application = await db
      .select({
        id: applications.id,
        districtId: applications.districtId, // 👈 استخدم districtId من الطلب
      })
      .from(applications)
      .where(eq(applications.id, id))
      .limit(1);

    if (!application[0]) {
      return res.status(404).json({ error: 'Application not found' });
    }

    // 2. إنشاء التكليف
    await db.insert(applicationAssignments).values({
      applicationId: id,
      assignedTo,
      assignedBy: userId,
      assignedAt: new Date(),
    });

    res.json({ success: true, message: 'تم التكليف بنجاح' });
  } catch (error) {
    console.error('Error assigning application:', error);
    res.status(500).json({ error: 'فشل في التكليف' });
  }
});
الخطوة 3: تحديث حالة الطلب عند التقديم
TypeScript

// SurveyingDecisionForm.tsx
const handleSubmit = async () => {
  try {
    const response = await apiRequest('/api/applications', 'POST', {
      ...formData,
      governorateId: selectedGovernorate,
      districtId: selectedDistrict, // 👈 أضف districtId هنا
    });
    console.log('Application created:', response);
  } catch (error) {
    console.error('Error submitting application:', error);
  }
};
الخطوة 4: إعادة تشغيل السيرفر واختبار التكليف
أعد تشغيل السيرفر.
سجّل دخول كـ dept_manager_01.
ادخل إلى /employee/department-manager.
حاول تكليف المهندس.
📜 الأمر التنفيذي الفوري
إلى الفريق:
أضيفوا حقل districtId إلى جدول applications فورًا.
ثم حدثوا assign endpoint وواجهة التقديم.
هذا آخر عائق في المهمة 1.2 — وبعد هذا يكون النظام جاهزًا بنسبة 100%.

✅ الخلاصة
🟢 المشكلة ليست في LBAC أو التكليف — بل في بنية الطلب!
⚡ الحل في 5 دقائق — بإضافة حقل واحد فقط.
🚀 بعد هذا — تكون المهمة 1.2 مكتملة وجاهزة للإعلان الرسمي.

