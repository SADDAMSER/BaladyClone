❗ المشكلة الحقيقية: الطلب لا يظهر في /employee/section-head لأن currentStage ليس 'assigned'
🔍 السبب الجذري:

بعد الدفع — الطلب ينتقل إلى treasury-applications → لكن currentStage لا يُحدث إلى 'assigned'.
صفحة /employee/section-head تعرض فقط الطلبات التي currentStage = 'assigned'.
لذلك — الطلب لا يظهر في الصفحة الجديدة.
📌 الأدلة من السجل:
log

[LBAC DEBUG] Filtered applications count: 0 ← في section-head → ❌ الطلب غير ظاهر!
GET /api/treasury-applications 200 ← الطلب ظهر في الصندوق → ✅ صحيح.
→ ✅ هذا ليس خطأ في LBAC أو الواجهة — بل في سير العمل (Workflow).

🛠️ الحل الفوري (خلال 5 دقائق)
الخطوة 1: تحديث confirmPayment ليُحدث currentStage
TypeScript

// server/routes/payments.ts
router.post('/confirm', authenticateToken, async (req, res) => {
  try {
    const { applicationId } = req.body;
    const userId = req.user?.id;

    // 1. تأكيد الدفع
    await db.insert(payments).values({
      applicationId,
      amount: calculateFee(applicationId),
      method: 'cash',
      status: 'completed',
      confirmedBy: userId,
    });

    // 2. تحديث حالة الطلب ← 👈 أضف هذا السطر
    await db
      .update(applications)
      .set({ 
        status: 'payment_completed',
        currentStage: 'assigned', // 👈 هذا هو المفتاح!
        updatedAt: new Date()
      })
      .where(eq(applications.id, applicationId));

    res.json({ success: true, message: 'تم تأكيد السداد بنجاح' });
  } catch (error) {
    console.error('Error confirming payment:', error);
    res.status(500).json({ error: 'فشل في تأكيد السداد' });
  }
});
الخطوة 2: التحقق من SectionHeadDashboard.tsx
React

// client/src/employee/pages/SectionHeadDashboard.tsx
useEffect(() => {
  const fetchApplications = async () => {
    try {
      const response = await apiRequest(
        '/api/applications?currentStage=assigned', // 👈 يبحث عن currentStage = 'assigned'
        'GET'
      );
      setApplications(response.data);
    } catch (error) {
      console.error('Error fetching applications:', error);
    }
  };
  fetchApplications();
}, []);
→ ✅ هذا صحيح — لا يحتاج تعديل.

الخطوة 3: إعادة تشغيل السيرفر واختبار التدفق
أعد تشغيل السيرفر.
قدم طلبًا جديدًا.
ادفع في الصندوق.
تحقق من ظهور الطلب في /employee/section-head.
📜 الأمر التنفيذي الفوري
إلى الفريق:
حدثوا payments.ts بالكود أعلاه فورًا.
هذا آخر عائق في المهمة 1.2 — وبعد هذا يكون النظام جاهزًا بنسبة 100%.

✅ الخلاصة
🟢 المشكلة ليست في LBAC أو الواجهة — بل في سير العمل.
⚡ الحل في 5 دقائق — بإضافة سطر واحد فقط.
🚀 بعد هذا — تكون المهمة 1.2 مكتملة وجاهزة للإعلان الرسمي.

