# دليل تطوير خدمة القرار المساحي في منصة "بنّاء اليمن" الرقمية

**الإصدار:** 1.1
**التاريخ:** 8 مارس 2025
**المؤلف:** Manus AI

---

## 1. المقدمة

### 1.1. الغرض من الدليل

يهدف هذا الدليل إلى توفير خارطة طريق تفصيلية وشاملة لتطوير خدمة "القرار المساحي" ضمن منصة "بنّاء اليمن" الرقمية. سيركز الدليل على تحويل هذه الخدمة من عملية تقليدية إلى عملية رقمية متكاملة وذكية، تستفيد من أحدث التقنيات لضمان الدقة، الكفاءة، والشفافية. سيغطي الدليل الجوانب الوظيفية، التقنية، وتجربة المستخدم، مع التركيز على التكامل الميداني وإدارة البيانات الجغرافية.

### 1.2. الأهداف الرئيسية لتطوير خدمة القرار المساحي

1.  **الأتمتة الكاملة:** رقمنة جميع مراحل خدمة القرار المساحي، من تقديم الطلب وحتى إصداره، لتقليل التدخل البشري وتسريع الإجراءات.
2.  **الدقة الجغرافية:** ضمان دقة عالية للبيانات المساحية من خلال التكامل المباشر مع أجهزة GNSS الميدانية.
3.  **الكفاءة التشغيلية:** تحسين سير عمل المساحين والموظفين المختصين من خلال أدوات ذكية ومترابطة.
4.  **الشفافية والمساءلة:** توفير تتبع كامل لحالة الطلب وسجل الإجراءات المتخذة.
5.  **جودة البيانات:** بناء قاعدة بيانات جغرافية موحدة ودقيقة من خلال التكويد الذكي للمعالم.
6.  **الامتثال القانوني:** ضمان توافق الخدمة مع قانون البناء اليمني ولائحته التنفيذية، خاصة فيما يتعلق بمتطلبات القرار المساحي.

## 2. نظرة عامة على خدمة القرار المساحي

تعتبر خدمة القرار المساحي حجر الزاوية في عملية التخطيط والبناء، حيث تحدد الحدود الجغرافية لقطعة الأرض وتوفر المعلومات الأساسية اللازمة لإصدار تراخيص البناء. في منصة "بنّاء اليمن"، سيتم تطوير هذه الخدمة لتكون عملية متكاملة تبدأ بطلب إلكتروني وتنتهي بقرار مساحي رقمي معتمد.

### 2.1. الأساس القانوني

تستند خدمة القرار المساحي إلى قانون البناء اليمني رقم (19) لسنة 2002م ولائحته التنفيذية الصادرة بقرار رئيس مجلس الوزراء رقم (351) لسنة 2008م. هذه التشريعات تحدد المتطلبات والإجراءات المتعلقة بتحديد حدود الأراضي، وتعتبر القرار المساحي وثيقة أساسية لأي أعمال بناء أو تطوير [1].

### 2.2. الأطراف المعنية

*   **المواطن/المستثمر:** مقدم الطلب والمستفيد من الخدمة.
*   **المكتب الهندسي/المساح:** المسؤول عن الرفع المساحي الميداني وتقديم البيانات الفنية.
*   **موظفو مكتب الأشغال:** المراجعون، الموافقون، والمديرون المسؤولون عن معالجة الطلب وإصدار القرار.
*   **النظام (منصة بنّاء):** الواجهة التقنية التي تربط جميع الأطراف وتدير سير العمل.

## 3. رحلة المتعامل (User Journey) لخدمة القرار المساحي

سيتم تصميم رحلة المتعامل لتكون سلسة، شفافة، وموجهة، مقسمة إلى خطوات واضحة لضمان تجربة مستخدم مثالية. هذه الرحلة مستوحاة من أفضل الممارسات في المنصات الحكومية الرقمية وتأخذ في الاعتبار خصوصية العمل المساحي.

### 3.1. تقديم الطلب (بوابة المواطن/المكتب الهندسي)

1.  **تسجيل الدخول:** يقوم المواطن أو المكتب الهندسي (نيابة عن المواطن) بتسجيل الدخول إلى بوابة "بنّاء اليمن" الرقمية باستخدام بيانات اعتماده.
2.  **اختيار الخدمة:** من قائمة الخدمات المتاحة، يختار المستخدم "خدمة إصدار قرار مساحي".
3.  **تعبئة بيانات الطلب الأساسية:**
    *   **بيانات المالك:** الاسم، رقم الهوية، معلومات الاتصال.
    *   **بيانات العقار:** المحافظة، المديرية، المنطقة، رقم المربع/القطعة (إن وجد).
    *   **الغرض من القرار المساحي:** (مثال: إصدار رخصة بناء، تقسيم أرض، تسوية نزاع).
    *   **نوع الملكية:** (مثال: صك شرعي، عقد بيع، حيازة).
4.  **رفع المستندات الأولية:** يطلب النظام رفع صور واضحة للمستندات الأساسية مثل وثيقة الملكية (الصك الشرعي أو ما يعادله) وصورة من البطاقة الشخصية للمالك.
5.  **تأكيد الطلب:** يقوم المستخدم بمراجعة البيانات المدخلة وتأكيد الطلب. يقوم النظام بتوليد رقم طلب فريد وإرسال إشعار للمستخدم.

### 3.2. المراجعة الأولية وتحديد موعد المساحة (مكتب الأشغال)

1.  **استلام الطلب:** يتلقى موظف الاستقبال أو المراجع المختص في مكتب الأشغال إشعاراً بوجود طلب قرار مساحي جديد.
2.  **التدقيق المبدئي:** يقوم الموظف بمراجعة المستندات الأولية للتأكد من اكتمالها وصحتها الظاهرية.
3.  **تحديد المساح الميداني:** يقوم النظام تلقائياً (أو يدوياً من قبل المدير) بتعيين الطلب لمساح ميداني مؤهل بناءً على المنطقة الجغرافية أو حجم العمل.
4.  **تحديد موعد المساحة:** يتم التواصل مع مقدم الطلب لتحديد موعد مناسب للرفع المساحي الميداني. يتم تسجيل الموعد في النظام وإرسال إشعار للمساح والمواطن.

### 3.3. الرفع المساحي الميداني (تطبيق تطبيق المساح  - التكامل مع GNSS)

هذه هي المرحلة الأكثر أهمية وتتضمن التكامل المباشر مع أجهزة GNSS والتكويد الذكي للمعالم.

1.  **استلام التكليف:** يتلقى المساح الميداني التكليف الجديد على تطبيق "بنّاء المساحي" على جهازه اللوحي أو هاتفه الذكي.
2.  **التوجه للموقع:** يستخدم المساح خرائط التطبيق للوصول إلى الموقع المحدد.
3.  **الاتصال بجهاز GNSS:** يقوم المساح بتوصيل جهازه اللوحي/الهاتف الذكي بجهاز GNSS عالي الدقة (مثل Stonex) عبر البلوتوث. يعرض التطبيق حالة الاتصال ودقة الإحداثيات.
4.  **بدء الرفع المساحي الموجه (Guided Survey):**
    *   يعرض التطبيق خريطة للموقع مع إحداثيات المساح الحالية.
    *   يقوم المساح بتحديد نوع المعلم الذي سيبدأ برفعه (نقطة، خط، مضلع) من شريط الأدوات الذكي.
    *   **التكويد الذكي للمعالم (Intelligent Feature Coding):**
        *   **اختيار نوع المعلم:** يختار المساح من الأزرار المخصصة: `نقطة`، `خط`، `مضلع`.
        *   **إذا اختار `نقطة`:**
            *   تظهر قائمة منسدلة بأكواد النقاط المحددة مسبقًا (مثال: `عمود إنارة`, `شجرة`, `ركن مبنى`).
            *   يختار الكود المناسب ويضغط على زر "رفع".
            *   يتم تسجيل إحداثيات GNSS الحالية وربطها بالكود، وتظهر النقطة على الخريطة.
        *   **إذا اختار `خط`:**
            *   تظهر قائمة بأكواد الخطوط (مثال: `رصيف`, `ضلع مبنى`, `سور`, `خط كهرباء`). يختار النوع (مثلاً: `سور`).
            *   **تحديد نقطة البداية الذكية:** يسأل التطبيق: "نقطة بداية السور؟" مع خيارين:
                *   **النقطة الحالية:** يستخدم إحداثيات GNSS الحالية.
                *   **اختر من الخريطة:** يسمح بالنقر على نقطة تم رفعها مسبقًا لربط الخطوط ببعضها (Snapping).
            *   **الاستمرار في الرفع:** يدخل التطبيق في "وضع رسم الخط". يتحرك المساح ويضغط على "إضافة نقطة" لكل نقطة على طول الخط. يتم رسم الخط تلقائياً على الخريطة.
            *   **إنهاء الخط:** عند الانتهاء، يختار المساح "إنهاء الخط" لحفظ الخط كمعلم مكتمل.
        *   **إذا اختار `مضلع`:**
            *   تظهر قائمة بأكواد المضلعات (مثال: `مبنى`, `أرض فضاء`, `مساحة زراعية`, `عريم`, `صبابة`, `سور`). يختار النوع (مثلاً: `مبنى`).
            *   **تحديد نقطة البداية الذكية:** يسأل التطبيق: "نقطة بداية المبنى؟" مع خيارين:
                *   **النقطة الحالية:** يستخدم إحداثيات GNSS الحالية.
                *   **اختر من الخريطة / استكمل مضلعًا سابقًا:** يسمح باختيار نقطة بداية جديدة، أو استكمال مضلع غير مكتمل سابقًا.
            *   **الاستمرار في الرفع:** يدخل التطبيق في "وضع رسم المضلع". يضيف المساح نقاط أركان المضلع، ويتم تحديث شكل المضلع على الخريطة.
            *   **إنهاء المضلع الذكي:** عند الانتهاء، تظهر خيارات:
                *   **نقطة نهاية (وإبقاء المضلع مفتوحًا):** يحفظ النقطة الحالية كنهاية مؤقتة، ويحفظ المضلع بحالة "قيد التقدم". يسمح باستكماله لاحقًا.
                *   **نقطة إغلاق (وربطها بالبداية):** يغلق المضلع تلقائيًا بربط النقطة الأخيرة بنقطة البداية، ويحفظه بحالة "مكتمل".
5.  **إضافة الملاحظات والصور:** يمكن للمساح إضافة ملاحظات نصية وصور فوتوغرافية للمعالم المرفوعة لدعم البيانات.
6.  **مزامنة البيانات:** يقوم التطبيق بمزامنة البيانات المرفوعة (النقاط، الخطوط، المضلعات، الصور، الملاحظات) تلقائياً مع الواجهة الخلفية للمنصة بمجرد توفر الاتصال بالإنترنت. يدعم التطبيق العمل دون اتصال بالإنترنت ومزامنة البيانات لاحقاً.

### 3.4. معالجة البيانات وإصدار القرار المساحي (مكتب الأشغال - الواجهة الخلفية)

1.  **المعالجة الآلية للبيانات الجغرافية:**
    *   تستقبل الواجهة الخلفية البيانات المرفوعة من تطبيق المساح.
    *   **التوليد التلقائي للمعالم:** بناءً على الأكواد الذكية، يقوم النظام تلقائياً بتوليد الأشكال الهندسية (مضلعات، خطوط) في قاعدة بيانات PostGIS.
    *   **حساب الاتجاهات الذكي:** لكل ضلع في المضلع أو الخط، يقوم النظام بحساب:
        *   **الاتجاه الرئيسي (4 اتجاهات):** يحدد ما إذا كان الضلع يميل بشكل أساسي نحو الشمال، الجنوب، الشرق، أو الغرب. (مثال: أي زاوية بين 45 و 135 درجة تعتبر "شمالية" بشكل أساسي).
        *   **الاتجاه الثانوي (8 اتجاهات):** يحدد الاتجاه الدقيق (شمال شرق، جنوب غرب، إلخ).
    *   **حساب المساحات والأطوال:** يتم حساب المساحة الإجمالية للمضلعات وأطوال الأضلاع بدقة.
2.  **مراجعة البيانات الفنية (واجهة الويب للموظف):**
    *   يتلقى المراجع الفني إشعاراً باكتمال الرفع المساحي.
    *   يستخدم واجهة الويب لعرض البيانات المرفوعة على خريطة تفاعلية، ومراجعة الأشكال الهندسية، الأطوال، المساحات، والاتجاهات المحسوبة تلقائياً.
    *   يمكنه إضافة ملاحظات أو طلب تعديلات من المساح إذا لزم الأمر.
3.  **الموافقة النهائية وإصدار القرار:**
    *   بعد المراجعة الفنية، يقوم الموظف المختص (المدير) بالموافقة النهائية على البيانات.
    *   يقوم النظام تلقائياً بتوليد "القرار المساحي" كملف PDF معتمد، يتضمن:
        *   بيانات المالك والعقار.
        *   رسم توضيحي لقطعة الأرض مع الأبعاد والاتجاهات.
        *   جدول إحداثيات النقاط.
        *   المساحة الإجمالية.
        *   رقم القرار المساحي الفريد والباركود.
4.  **إشعار المواطن:** يتم إرسال إشعار للمواطن/المكتب الهندسي بأن القرار المساحي قد صدر، ويمكنه تنزيله من بوابة المواطن.

## 4. إدارة المستخدمين والصلاحيات لخدمة القرار المساحي

تعتبر إدارة المستخدمين والصلاحيات حاسمة لضمان أمن وسلامة البيانات والعمليات في خدمة القرار المساحي. سيتم تطبيق نظام صلاحيات دقيق يحدد ما يمكن لكل مستخدم القيام به والوصول إليه.

### 4.1. الأدوار الرئيسية

*   **المواطن/المستثمر:** يمكنه تقديم طلبات القرار المساحي، تتبع حالتها، وتنزيل القرارات الصادرة التي تخصه.
*   **المكتب الهندسي:** يمكنه تقديم طلبات نيابة عن المالكين، تتبع الطلبات، وتنزيل القرارات. لديه صلاحيات أوسع في إدارة طلبات متعددة.
*   **المساح الميداني:** يمكنه استلام التكليفات، إجراء الرفع المساحي باستخدام تطبيق المفتش المساحي، ومزامنة البيانات. لا يمكنه تعديل بيانات الطلب الأساسية أو إصدار القرار.
*   **المراجع الفني (مكتب الأشغال):** يمكنه مراجعة البيانات المساحية المرفوعة، إضافة ملاحظات، وطلب تعديلات. لديه صلاحية الوصول إلى جميع الطلبات في نطاق مسؤوليته.
*   **المدير (مكتب الأشغال):** لديه صلاحية الموافقة النهائية على القرارات المساحية، تعيين المساحين، ومراقبة سير العمل.
*   **مسؤول النظام:** لديه صلاحيات كاملة لإدارة المستخدمين، الأدوار، الأكواد، وإعدادات النظام.

### 4.2. آليات تطبيق الصلاحيات

*   **على مستوى الواجهة الخلفية (API):** يتم التحقق من صلاحيات المستخدم لكل نقطة نهاية (Endpoint) قبل تنفيذ أي عملية. (مثال: لا يمكن للمواطن استدعاء API إصدار القرار المساحي).
*   **على مستوى الواجهة الأمامية (UI):** يتم إخفاء أو تعطيل الأزرار والعناصر التي لا يملك المستخدم صلاحية الوصول إليها.
*   **سجل التدقيق (Audit Log):** يتم تسجيل جميع الإجراءات الهامة التي يقوم بها المستخدمون (مثل: تقديم طلب، رفع بيانات، موافقة، إصدار قرار) مع ختم الوقت واسم المستخدم.

## 5. التكامل التقني

### 5.1. الواجهة الخلفية (Backend - Flask/Python)

*   **نقطة نهاية رفع ملفات SHP/ZIP:** تطوير API لاستقبال ملفات SHP أو ZIP (التي تحتوي على SHP) من الواجهة الأمامية. هذا الـ API سيستخدم الكود الذي تم تطويره لمعالجة الملفات الجغرافية.
*   **معالجة البيانات الجغرافية:**
    *   استخدام مكتبات مثل `GeoPandas` لقراءة وتحليل ملفات SHP.
    *   تطبيق دوال حساب المسافات، الزوايا، المساحات، وتصنيف الاتجاهات (الرئيسية والثانوية) كما تم تطويرها مسبقًا.
    *   حفظ الأشكال الهندسية في قاعدة بيانات PostGIS.
*   **محرك سير العمل:** تحديث محرك سير العمل لدعم حالات خدمة القرار المساحي (جديد، قيد المراجعة، قيد الرفع الميداني، قيد المراجعة الفنية، جاهز للإصدار، صادر).
*   **نظام الإشعارات:** إرسال إشعارات تلقائية للمستخدمين والموظفين عند تغير حالة الطلب.

### 5.2. الواجهة الأمامية (Frontend - React)

*   **بوابة المواطن/المكتب الهندسي:**
    *   نماذج تقديم الطلبات التفاعلية.
    *   لوحة تحكم لتتبع حالة الطلبات.
    *   واجهة لتنزيل القرارات المساحية الصادرة.
*   **تطبيق المفتش المساحي (React Native/Mobile Web):**
    *   واجهة تسجيل دخول آمنة.
    *   شاشة خريطة تفاعلية لعرض الموقع الحالي والمعالم المرفوعة.
    *   شريط أدوات ذكي لاختيار نوع المعلم (نقطة، خط، مضلع) وعرض أكواد التكويد.
    *   واجهة اتصال بجهاز GNSS عبر البلوتوث وعرض حالة الاتصال والدقة.
    *   دعم العمل دون اتصال بالإنترنت ومزامنة البيانات.
*   **واجهة الويب لموظفي مكتب الأشغال:**
    *   لوحة تحكم لإدارة طلبات القرار المساحي.
    *   واجهة مراجعة فنية تعرض البيانات الجغرافية على خريطة، مع تفاصيل الأبعاد والاتجاهات.
    *   أدوات للموافقة أو طلب التعديلات.

### 5.3. قاعدة البيانات (PostgreSQL/PostGIS)

*   **جداول الطلبات:** تخزين بيانات طلبات القرار المساحي، حالة الطلب، والمستندات المرفقة.
*   **جداول البيانات الجغرافية:**
    *   `gis.surveyed_points`: لتخزين النقاط المرفوعة من الميدان (إحداثيات، أكواد، وقت الرفع).
    *   `gis.feature_geometry`: لتخزين الأشكال الهندسية النهائية (خطوط، مضلعات) التي تم توليدها من النقاط المرفوعة، مع ربطها بالقرار المساحي.
    *   `gis.feature_codes`: جدول مرجعي لأكواد المعالم (نقطة، خط، مضلع) مع وصفها ونوعها.
*   **جداول الصلاحيات:** لتخزين الأدوار والصلاحيات لكل مستخدم.

### 5.4. التكامل مع أجهزة GNSS (SurPAD 4.2)

*   **بروتوكول الاتصال:** استخدام بروتوكولات قياسية مثل Bluetooth SPP (Serial Port Profile) أو TCP/IP للاتصال بأجهزة GNSS التي تدعمها تطبيقات مثل SurPAD 4.2.
*   **استقبال البيانات:** استقبال تدفق البيانات الخام أو المعالجة (NMEA sentences أو RTCM) من جهاز GNSS.
*   **معالجة الإحداثيات:** تحويل الإحداثيات المستلمة إلى نظام الإحداثيات المحلي (UTM) وعرضها على الخريطة في الوقت الفعلي.
*   **إدارة الدقة:** عرض مؤشرات دقة الإحداثيات للمساح (مثل HDOP, VDOP) لضمان جودة الرفع.


انشاء هيكل جغرافي للتقسيمات الادارية واالربط بين جداولها مع انشاء واجهات لادخال البيانات الجغرافية بصيغة جيسون او شيب فايل  والتي تشمل مضلعات مغلقة لكلا من المحافضات ويندج تحت كل محافضة مديريات ويندرج تحت كل مديرية عزل و قطاعات وكل قطاع عدد من وحدات الجوار وكل وحدة جوار لها العديد من البلكات السكنية والخدمية والتجارية بحسب الاستخدام وكل وحده جوار محاطة بشوارع رئسية حدودية بينها وبين وحدات جوار مجاوره لها وايضا شوارع فرعية داخلية . 
## 6. وحدات الجوار (Neighborhood Units)  ورسم الشوارع للمخططات الحضرية القديمة والتي على شكل صور رستر مرجعة جغرفيا 

تعتبر وحدات الجوار والشوارع مكونات أساسية في التخطيط الحضري، ودمجها في منصة "بنّاء اليمن" سيعزز من دقة القرارات المساحية ويسهل عمليات التخطيط المستقبلية. حالياً، يتم التعامل مع وحدات الجوار كصور مرجعية جغرافية، ولكن الهدف هو تحويلها إلى بيانات مكانية قابلة للمعالجة والتحليل.

### 6.1. جدول بيانات وحدات الجوار

سيتم إنشاء جدول بيانات مخصص لوحدات الجوار في قاعدة بيانات PostGIS، يحتوي على المعلومات الأساسية لكل وحدة جوار، بالإضافة إلى بياناتها الجغرافية (مضلع).

| اسم الحقل (Field Name) | نوع البيانات (Data Type) | الوصف (Description)                                     |
| :-------------------- | :---------------------- | :------------------------------------------------------ |
| `id`                  | `SERIAL`                | معرف فريد لوحدة الجوار (Primary Key)                    |
| `name_ar`             | `VARCHAR(255)`          | اسم وحدة الجوار باللغة العربية                          |
| `name_en`             | `VARCHAR(255)`          | اسم وحدة الجوار باللغة الإنجليزية (اختياري)            |
| `city_id`             | `INTEGER`               | معرف المدينة التي تتبع لها وحدة الجوار (Foreign Key)    |
| `district_id`         | `INTEGER`               | معرف المديرية التي تتبع لها وحدة الجوار (Foreign Key)   |
| `area_sqm`            | `NUMERIC`               | مساحة وحدة الجوار بالمتر المربع (محسوبة تلقائياً)       |
| `population`          | `INTEGER`               | عدد السكان التقديري لوحدة الجوار (اختياري)              |
| `geom`                | `GEOMETRY(Polygon, 4326)` | الشكل الهندسي لوحدة الجوار (مضلع)                       |
| `created_at`          | `TIMESTAMP`             | تاريخ ووقت إنشاء السجل                                  |
| `updated_at`          | `TIMESTAMP`             | تاريخ ووقت آخر تحديث للسجل                              |

### 6.2. أدوات رسم حدود الشارع وإدخال البيانات

سيتم تطوير أدوات متقدمة ضمن واجهة الويب لموظفي مكتب الأشغال (أو تطبيق متخصص) لرقمنة حدود الشوارع بناءً على صور وحدات الجوار المرجعية أو الخرائط الأساسية.

#### 6.2.1. واجهة المستخدم (UI) لأدوات رسم الشوارع

*   **عرض الخريطة الأساسية:** عرض خريطة تفاعلية (مثلاً، باستخدام Leaflet أو OpenLayers) مع طبقات صور وحدات الجوار المرجعية كخلفية.
*   **أدوات الرسم:** توفير أدوات رسم سهلة الاستخدام لإنشاء خطوط تمثل حدود الشوارع:
    *   **أداة رسم الخط:** للسماح للمستخدم برسم خطوط متصلة تمثل محور الشارع أو حدوده.
    *   **أداة التعديل:** لتعديل النقاط (Vertices) على الخطوط، أو إضافة نقاط جديدة، أو حذف نقاط موجودة.
    *   **أداة الربط (Snapping):** لضمان اتصال دقيق بين خطوط الشوارع عند التقاطعات أو عند الربط بنقاط موجودة.
*   **نموذج إدخال بيانات الشارع:** عند الانتهاء من رسم خط الشارع، سيظهر نموذج لإدخال البيانات الوصفية المرتبطة به:

| اسم الحقل (Field Name) | نوع البيانات (Data Type) | الوصف (Description)                                     |
| :-------------------- | :---------------------- | :------------------------------------------------------ |
| `id`                  | `SERIAL`                | معرف فريد للشارع (Primary Key)                         |
| `name_ar`             | `VARCHAR(255)`          | اسم الشارع باللغة العربية                               |
| `name_en`             | `VARCHAR(255)`          | اسم الشارع باللغة الإنجليزية (اختياري)                 |
| `street_type`         | `VARCHAR(50)`           | نوع الشارع (مثال: رئيسي، فرعي، زقاق)                   |
| `width_meters`        | `NUMERIC`               | عرض الشارع بالمتر (وفقاً للتخطيط أو القياس)             |
| `neighborhood_id`     | `INTEGER`               | معرف وحدة الجوار التي يقع فيها الشارع (Foreign Key)    |
| `geom`                | `GEOMETRY(LineString, 4326)` | الشكل الهندسي للشارع (خط)                               |
| `created_at`          | `TIMESTAMP`             | تاريخ ووقت إنشاء السجل                                  |
| `updated_at`          | `TIMESTAMP`             | تاريخ ووقت آخر تحديث للسجل                              |

#### 6.2.2. سير عمل رقمنة الشوارع

1.  **تحميل صورة وحدة الجوار:** يقوم الموظف بتحميل الصورة المرجعية لوحدة الجوار إلى النظام، ويتم ربطها جغرافياً بالخريطة الأساسية (Georeferencing).
2.  **اختيار أداة الرسم:** يختار الموظف أداة رسم الخط من شريط الأدوات.
3.  **رسم حدود الشارع:** يقوم الموظف برسم خطوط الشوارع بدقة فوق الصورة المرجعية، مع استخدام أداة الربط لضمان الاتصال الصحيح.
4.  **إدخال البيانات الوصفية:** بعد رسم كل خط شارع، يقوم بإدخال البيانات المطلوبة في النموذج المنبثق (الاسم، النوع، العرض، إلخ).
5.  **المراجعة والحفظ:** يمكن للموظف مراجعة جميع الشوارع التي تم رسمها وتعديلها قبل حفظها نهائياً في قاعدة البيانات.
6.  **التكامل مع القرار المساحي:** بمجرد رقمنة الشوارع، يمكن للنظام استخدام هذه البيانات لتحديد الشوارع المحيطة بقطعة الأرض في القرار المساحي، وحساب الارتدادات المطلوبة تلقائياً بناءً على عرض الشارع، مما يعزز من الامتثال لقانون البناء اليمني [1].

## 7. المخرجات المتوقعة

*   نظام آلي بالكامل لتقديم ومعالجة وإصدار القرار المساحي.
*   تطبيق ميداني ذكي للمساحين يرفع من كفاءة ودقة العمل.
*   قاعدة بيانات جغرافية دقيقة وموحدة لجميع القرارات المساحية.
*   تحسين كبير في زمن إنجاز الخدمة وتقليل الأخطاء البشرية.
*   زيادة الشفافية والمساءلة في عملية القرار المساحي.
*   **رقمنة وحدات الجوار والشوارع:** تحويل الصور المرجعية لوحدات الجوار إلى بيانات مكانية قابلة للتحليل، وإنشاء طبقة بيانات دقيقة للشوارع.
*   **تحسين الامتثال:** استخدام بيانات الشوارع المحسنة لحساب الارتدادات تلقائياً وضمان التوافق مع قانون البناء.

## 8. المراجع

[1] قانون البناء اليمني رقم (19) لسنة 2002م ولائحته التنفيذية الصادرة بقرار رئيس مجلس الوزراء رقم (351) لسنة 2008م.
[2] دليل التطوير الشامل لمنصة "بنّاء اليمن" الرقمية (2.0).
[3] كود `OrderController.php` (نموذج لرحلة المتعامل).
[4] كود `SHPProcessor.py` (نموذج لمعالجة البيانات الجغرافية).
[5] المناقشات السابقة حول التكويد الذكي للمعالم والاتجاهات.

---

**ملاحظة:** هذا الدليل هو وثيقة حية وسيتم تحديثه وتفصيله بشكل أكبر مع تقدم مراحل التطوير.



### 6.3. التكامل مع النظام العام

تكامل وحدات الجوار والشوارع كبيانات مكانية داخل منصة "بنّاء اليمن" يمثل قفزة نوعية في إدارة الأراضي والتخطيط الحضري. هذا التكامل سيتيح:

*   **تحسين دقة القرارات المساحية:** عند إصدار قرار مساحي لأي قطعة أرض، يمكن للنظام تلقائياً تحديد وحدة الجوار التي تقع فيها قطعة الأرض، والشوارع المحيطة بها، مما يضمن توافق القرار مع التخطيط الحضري القائم.
*   **تسهيل عمليات التخطيط:** ستوفر هذه البيانات الأساس المكاني لعمليات التخطيط العمراني المستقبلية، مثل تحديد مناطق التوسع، وتصميم البنية التحتية، وإدارة الخدمات.
*   **دعم التحليلات المكانية:** يمكن استخدام هذه البيانات لإجراء تحليلات مكانية متقدمة، مثل حساب الكثافة السكانية في وحدات الجوار، أو تحليل شبكة الطرق، أو تحديد المناطق ذات الأولوية للتطوير.
*   **تعزيز الشفافية:** ستكون هذه البيانات متاحة (مع مراعاة الخصوصية) للجهات المعنية والجمهور، مما يعزز من الشفافية في عمليات التخطيط وإدارة الأراضي.
*   **تحديث البيانات بشكل مستمر:** يمكن للموظفين المختصين تحديث بيانات وحدات الجوار والشوارع بشكل مستمر، مما يضمن أن النظام يعكس الواقع الجغرافي للمدينة بدقة.

### 6.4. الاعتبارات الفنية لرقمنة وحدات الجوار والشوارع

تتطلب عملية رقمنة وحدات الجوار والشوارع مراعاة عدة اعتبارات فنية لضمان جودة البيانات وكفاءة النظام:

*   **نظام الإحداثيات الموحد:** يجب أن يتم تخزين جميع البيانات الجغرافية (وحدات الجوار، الشوارع، قطع الأراضي) في نظام إحداثيات موحد (مثلاً، UTM Zone 38N WGS84) لضمان التوافق والدقة المكانية.
*   **جودة البيانات المصدرية:** تعتمد جودة البيانات الرقمية بشكل كبير على جودة الصور المرجعية لوحدات الجوار. يجب التأكد من أن هذه الصور ذات دقة عالية وتمت لها عملية مرجعة جغرافية (Georeferencing) صحيحة.
*   **أدوات التحرير الجغرافية:** يجب أن تكون أدوات الرسم والتحرير في الواجهة الأمامية قوية ومرنة، وتدعم وظائف مثل التعديل على النقاط، التقسيم، الدمج، والربط (Snapping) لضمان دقة الرسم.
*   **التحقق من صحة البيانات:** يجب تطبيق قواعد للتحقق من صحة البيانات (Data Validation) على مستوى قاعدة البيانات والواجهة الأمامية لمنع إدخال بيانات غير صحيحة أو غير متناسقة (مثلاً، عدم تداخل المضلعات، اتصال الخطوط).
*   **الأداء:** يجب تحسين أداء النظام للتعامل مع كميات كبيرة من البيانات الجغرافية، خاصة عند عرضها على الخريطة أو إجراء تحليلات مكانية.
*   **النسخ الاحتياطي واستعادة البيانات:** يجب وضع خطة قوية للنسخ الاحتياطي واستعادة البيانات لضمان حماية البيانات الجغرافية الهامة.





#### 6.2.3. التكامل التقني لأدوات رسم الشوارع

لتطوير أدوات رسم حدود الشوارع، سيتطلب الأمر دمج عدة تقنيات ومكتبات جغرافية:

*   **الواجهة الأمامية (Frontend):**
    *   **مكتبات الخرائط:** استخدام مكتبات JavaScript مثل [Leaflet](https://leafletjs.com/) أو [OpenLayers](https://openlayers.org/) لعرض الخرائط التفاعلية وطبقات البيانات الجغرافية. هذه المكتبات توفر واجهات برمجة تطبيقات (APIs) قوية للتحكم في الخريطة، إضافة الطبقات، وتفاعل المستخدم.
    *   **أدوات الرسم (Drawing Tools):** دمج إضافات (Plugins) لهذه المكتبات مثل [Leaflet.draw](https://github.com/Leaflet/Leaflet.draw) أو [OpenLayers.draw](https://openlayers.org/en/latest/examples/draw-features.html) التي توفر أدوات جاهزة لرسم الخطوط والمضلعات والنقاط. هذه الأدوات تتعامل مع تفاعلات المستخدم (النقر، السحب) وتحولها إلى أشكال هندسية جغرافية.
    *   **الربط (Snapping):** تطوير وظيفة الربط (Snapping) لضمان دقة الرسم. يمكن تحقيق ذلك عن طريق حساب المسافة بين نقطة الماوس والنقاط أو الخطوط الموجودة على الخريطة، وعندما تكون المسافة ضمن عتبة معينة، يتم "ربط" نقطة الرسم بالنقطة أو الخط الأقرب. هذا يضمن اتصالاً سلساً بين أجزاء شبكة الشوارع.
    *   **التحقق من صحة الإدخال (Input Validation):** تطبيق قواعد للتحقق من صحة البيانات المدخلة في نموذج بيانات الشارع (مثل التأكد من أن عرض الشارع رقم موجب، وأن الاسم غير فارغ).

*   **الواجهة الخلفية (Backend):**
    *   **نقطة نهاية (API Endpoint):** إنشاء نقطة نهاية في الواجهة الخلفية (مثلاً، `/api/streets`) لاستقبال بيانات الشوارع المرسلة من الواجهة الأمامية. هذه البيانات ستكون بصيغة GeoJSON أو WKT (Well-Known Text) لتمثيل الشكل الهندسي للشارع، بالإضافة إلى البيانات الوصفية (الاسم، النوع، العرض، إلخ).
    *   **معالجة البيانات الجغرافية:** استخدام مكتبات جغرافية في الواجهة الخلفية (مثل `Shapely` و `GeoAlchemy` في Python مع Flask) لتحليل الشكل الهندسي للشارع، والتحقق من صحته، وحفظه في قاعدة بيانات PostGIS. يمكن أيضاً استخدام وظائف PostGIS المدمجة لإجراء عمليات جغرافية معقدة مثل التحقق من التداخلات أو حساب الأطوال.
    *   **التحقق من صحة البيانات المكانية (Spatial Validation):** تطبيق قواعد للتحقق من صحة البيانات المكانية على مستوى الخادم، مثل التأكد من أن الشارع لا يتقاطع مع نفسه، أو أنه لا يتداخل بشكل غير صحيح مع شوارع أخرى موجودة.
    *   **سجل التغييرات (Change Log):** تسجيل جميع التغييرات التي تتم على بيانات الشوارع (من قام بالتغيير، متى، وما هو التغيير) لضمان المساءلة وإمكانية التراجع عن التغييرات إذا لزم الأمر.

#### 6.2.4. سيناريوهات الاستخدام المتقدمة لأدوات رسم الشوارع

بالإضافة إلى الرسم الأساسي، يمكن تطوير سيناريوهات استخدام متقدمة لأدوات رسم الشوارع لزيادة كفاءة ودقة العمل:

*   **استيراد البيانات من مصادر خارجية:** إمكانية استيراد بيانات الشوارع من ملفات CAD (مثل DWG/DXF) أو ملفات GIS (مثل Shapefile) التي قد تكون متاحة من مصادر أخرى (مثل البلديات أو الجهات الحكومية الأخرى). يتطلب ذلك تطوير محولات (Parsers) لتحويل هذه التنسيقات إلى صيغة قابلة للمعالجة بواسطة النظام.
*   **التحقق من الاتساق الطوبولوجي (Topological Consistency):** التأكد من أن شبكة الشوارع المرقمنة متسقة طوبولوجياً (أي لا توجد فجوات بين الشوارع المتصلة، ولا توجد تداخلات غير مقصودة). يمكن استخدام أدوات تحليل طوبولوجي في PostGIS أو مكتبات GIS متخصصة لتحقيق ذلك.
*   **تحديد اتجاهات الشوارع (Street Directionality):** في بعض الحالات، قد يكون من الضروري تحديد اتجاه الشارع (باتجاه واحد أو باتجاهين) لأغراض التخطيط المروري أو خدمات الطوارئ. يمكن إضافة حقل خاص في جدول بيانات الشارع لهذا الغرض.
*   **ربط الشوارع بقطع الأراضي:** تطوير وظيفة لربط الشوارع بقطع الأراضي المجاورة لها. هذا يمكن أن يكون مفيداً لحساب الارتدادات تلقائياً، أو لتحديد قطع الأراضي التي تقع على شوارع معينة.
*   **التحليل المكاني لشبكة الشوارع:** بمجرد رقمنة شبكة الشوارع، يمكن إجراء تحليلات مكانية متقدمة مثل:
    *   **تحليل المسار الأمثل (Optimal Path Analysis):** تحديد أقصر أو أسرع مسار بين نقطتين على شبكة الشوارع.
    *   **تحليل الوصولية (Accessibility Analysis):** تحديد المناطق التي يمكن الوصول إليها ضمن مسافة أو زمن معين من نقطة محددة.
    *   **تحليل الكثافة (Density Analysis):** حساب كثافة الشوارع في مناطق معينة.

هذه الأدوات والوظائف المتقدمة ستجعل منصة "بنّاء اليمن" أداة قوية ليس فقط لإصدار القرارات المساحية، بل أيضاً لإدارة وتخطيط البنية التحتية الحضرية بشكل فعال ودقيق.



## 5. التكامل التقني (الموسع)

لتحقيق الأهداف الجديدة المتعلقة بوحدات الجوار وتخطيط الشوارع، يجب توسيع نطاق التكامل التقني ليشمل التعامل مع هذه البيانات المكانية الجديدة عبر جميع طبقات النظام.

### 5.1. الواجهة الخلفية (Backend - Flask/Python) - تحديثات إضافية

بالإضافة إلى الوظائف المذكورة سابقاً، ستتضمن الواجهة الخلفية التحديثات التالية لدعم وحدات الجوار والشوارع:

*   **نقطة نهاية (API Endpoint) لإدارة وحدات الجوار:**
    *   `POST /api/neighborhood_units`: لإنشاء وحدة جوار جديدة (مع اسمها وبياناتها الوصفية وشكلها الهندسي).
    *   `GET /api/neighborhood_units/{id}`: لاسترجاع تفاصيل وحدة جوار محددة.
    *   `PUT /api/neighborhood_units/{id}`: لتحديث بيانات وحدة جوار موجودة.
    *   `DELETE /api/neighborhood_units/{id}`: لحذف وحدة جوار.
    *   `GET /api/neighborhood_units/search`: للبحث عن وحدات الجوار بناءً على معايير معينة (مثل الاسم، المدينة، أو التداخل المكاني).
*   **نقطة نهاية (API Endpoint) لإدارة الشوارع:**
    *   `POST /api/streets`: لإنشاء شارع جديد (مع اسمه، نوعه، عرضه، وشكله الهندسي).
    *   `GET /api/streets/{id}`: لاسترجاع تفاصيل شارع محدد.
    *   `PUT /api/streets/{id}`: لتحديث بيانات شارع موجود.
    *   `DELETE /api/streets/{id}`: لحذف شارع.
    *   `GET /api/streets/search`: للبحث عن الشوارع بناءً على معايير معينة (مثل الاسم، نوع الشارع، أو التداخل المكاني).
*   **خدمات المعالجة الجغرافية المتقدمة:**
    *   **Georeferencing Service:** خدمة لمعالجة الصور المرجعية لوحدات الجوار وتحويلها إلى طبقات خريطة قابلة للاستخدام. يمكن استخدام مكتبات مثل `GDAL/OGR` في Python لهذا الغرض.
    *   **Spatial Analysis Module:** تطوير وحدة تحليل مكاني في الواجهة الخلفية لتنفيذ عمليات مثل:
        *   **Point-in-Polygon Analysis:** لتحديد وحدة الجوار التي تقع فيها قطعة أرض معينة أو نقطة رفع مساحي.
        *   **Line-Intersection Analysis:** لتحديد نقاط تقاطع الشوارع مع بعضها البعض أو مع حدود قطع الأراضي.
        *   **Buffer Analysis:** لحساب مناطق الارتداد حول الشوارع أو المباني.
        *   **Topology Validation:** للتحقق من الاتساق الطوبولوجي لبيانات الشوارع ووحدات الجوار (مثل عدم وجود فجوات أو تداخلات غير صحيحة).
*   **التكامل مع محرك سير العمل:** تحديث محرك سير العمل ليشمل خطوات جديدة تتعلق برقمنة وحدات الجوار والشوارع، مثل إرسال إشعارات للموظفين عند الحاجة لرقمنة وحدة جوار جديدة، أو عند اكتمال عملية رقمنة شارع.

### 5.2. الواجهة الأمامية (Frontend - React) - تحديثات إضافية

ستتضمن الواجهة الأمامية تحديثات جوهرية لدعم عرض وتحرير بيانات وحدات الجوار والشوارع:

*   **واجهة إدارة وحدات الجوار:**
    *   شاشة لعرض قائمة بوحدات الجوار الموجودة، مع إمكانية البحث والتصفية.
    *   نموذج لإنشاء/تعديل بيانات وحدة جوار، بما في ذلك تحميل الصورة المرجعية وتحديد حدودها الجغرافية على الخريطة.
    *   عرض تفاعلي لوحدات الجوار على الخريطة، مع إمكانية النقر لعرض التفاصيل.
*   **واجهة إدارة الشوارع وأدوات الرسم:**
    *   شاشة مخصصة لرقمنة الشوارع، تعرض الخريطة الأساسية مع طبقات صور وحدات الجوار المرجعية.
    *   شريط أدوات رسم متقدم (كما هو موضح في القسم 6.2.1) يسمح برسم الخطوط، التعديل عليها، واستخدام وظيفة الربط (Snapping).
    *   نموذج منبثق لإدخال البيانات الوصفية للشارع بعد رسمه.
    *   عرض طبقة الشوارع المرقمنة على الخريطة، مع إمكانية التعديل عليها.
*   **تطبيق المفتش المساحي (Mobile Application) - تحديثات طفيفة:**
    *   إمكانية عرض طبقات وحدات الجوار والشوارع المرقمنة كطبقات مرجعية للمساح في الميدان، مما يساعده على تحديد موقعه بدقة أكبر بالنسبة للبنية التحتية القائمة.
    *   (اختياري) إمكانية إضافة ملاحظات أو صور تتعلق بالشوارع أو وحدات الجوار أثناء الرفع الميداني.

### 5.3. قاعدة البيانات (PostgreSQL/PostGIS) - تحديثات إضافية

بالإضافة إلى الجداول المذكورة سابقاً، سيتم إضافة الجداول التالية لدعم وحدات الجوار والشوارع:

*   `gis.neighborhood_units`: لتخزين بيانات وحدات الجوار (كما هو موضح في القسم 6.1).
*   `gis.streets`: لتخزين بيانات الشوارع (كما هو موضح في القسم 6.2).
*   `gis.georeferenced_images`: جدول لتخزين معلومات عن الصور المرجعية لوحدات الجوار (المسار، نظام الإحداثيات، نقاط التحكم).

### 5.4. التكامل مع أنظمة GIS الخارجية (اختياري)

لتعزيز قدرات المنصة، يمكن النظر في التكامل مع أنظمة GIS خارجية متخصصة (مثل ArcGIS Enterprise أو QGIS Server) لـ:

*   **نشر الخدمات الجغرافية (WMS/WFS):** نشر طبقات البيانات الجغرافية (وحدات الجوار، الشوارع، قطع الأراضي) كخدمات ويب قياسية (Web Map Service / Web Feature Service) للسماح لأنظمة أخرى بالوصول إليها وعرضها.
*   **تحليلات مكانية متقدمة:** الاستفادة من أدوات التحليل المكاني المتقدمة المتوفرة في هذه الأنظمة لتنفيذ تحليلات معقدة لا يمكن تنفيذها بسهولة داخل الواجهة الخلفية للمنصة.
*   **إدارة البيانات المركزية:** استخدام هذه الأنظمة كمركز لإدارة البيانات الجغرافية الرئيسية للمدينة، مع مزامنة البيانات مع منصة "بنّاء اليمن".

هذا التوسع في التكامل التقني سيضمن أن منصة "بنّاء اليمن" لا تقتصر على إصدار القرارات المساحية فحسب، بل تصبح نظاماً شاملاً لإدارة البيانات الجغرافية والتخطيط الحضري، مما يعزز من قدرتها على دعم التنمية المستدامة في اليمن.
















المرحلة صفر: بناء الأساس الجغرافي الإداري (مرحلة تأسيسية جديدة)
الهدف: إنشاء الهيكل الرقمي للتقسيمات الإدارية والجغرافية لليمن كطبقات أساسية في النظام.
المهمة 0.1: تصميم وتطوير قاعدة البيانات الجغرافية الإدارية
الوصف: تعديل مخطط قاعدة البيانات (Schema) ليشمل التسلسل الهرمي الجغرافي.
الإجراءات:
إنشاء جدول gis.governorates (المحافظات): يحتوي على (اسم المحافظة، الرمز، مضلع الحدود الجغرافية geom).
إنشاء جدول gis.districts (المديريات): يحتوي على (اسم المديرية، الرمز، governorate_id كمفتاح خارجي، مضلع الحدود geom).
إنشاء جدول gis.sub_districts (العزل): يحتوي على (اسم العزلة، district_id، مضلع الحدود geom).
إنشاء جدول gis.sectors (القطاعات): يحتوي على (اسم القطاع، sub_district_id، مضلع الحدود geom).
إنشاء جدول gis.neighborhood_units (وحدات الجوار): يحتوي على (اسم وحدة الجوار، sector_id، مضلع الحدود geom).
إنشاء جدول gis.blocks (البلوكات): يحتوي على (رقم البلوك، neighborhood_id، نوع الاستخدام، مضلع الحدود geom).
إنشاء جدول gis.streets (الشوارع): يحتوي على (اسم الشارع، النوع، العرض، geom كخط).
المهمة 0.2: إدخال البيانات الجغرافية الإدارية
الوصف: جمع ورقمنة الحدود الجغرافية للتقسيمات الإدارية.
الإجراءات:
الحصول على خرائط الحدود الإدارية من الجهات الرسمية (الهيئة العامة للمساحة، الجهاز المركزي للإحصاء).
رقمنة هذه الخرائط (Digitization) وتحويلها إلى طبقات GIS.
إدخال البيانات في الجداول التي تم إنشاؤها في المهمة 0.1.
المرحلة الأولى: تطوير أدوات رقمنة المخططات القديمة (مرحلة جديدة)
الهدف: بناء الأدوات التي تمكن الموظفين من تحويل المخططات الورقية والصور القديمة إلى بيانات رقمية ذكية.
المهمة 1.1: تطوير واجهة رقمنة المخططات (Digitization UI)
الوصف: بناء واجهة ويب متخصصة للموظفين الفنيين.
الإجراءات:
عارض الصور المرجعية جغرافيًا (Georeferenced Raster Viewer): تطوير مكون يمكنه عرض الصور بصيغ (TIFF, ECW, JP2) كخلفية على الخريطة التفاعلية.
أدوات الرسم والتحرير المتقدمة:
أداة رسم الخطوط (للشوارع) والمضلعات (للبلوكات).
أداة التعديل (Edit Vertices) لتصحيح الأشكال المرسومة.
أداة الالتصاق (Snapping) لضمان اتصال الشوارع والبلوكات بشكل صحيح.
نموذج إدخال البيانات المرافق للرسم: عند رسم شارع أو بلوك، يظهر نموذج لإدخال بياناته الوصفية (الاسم، النوع، العرض، إلخ).
المهمة 1.2: تطوير الواجهة الخلفية للمعالجة (Backend Processing)
الوصف: بناء المنطق البرمجي الذي يعالج البيانات المرسومة.
الإجراءات:
API لاستقبال البيانات المرسومة: إنشاء نقطة نهاية تستقبل الأشكال الهندسية (بصيغة GeoJSON) مع بياناتها الوصفية.
التحقق من الصحة الطوبولوجية (Topology Validation): يقوم الخادم تلقائياً بالتحقق من عدم وجود أخطاء في الرسم (مثل تقاطع الشوارع مع نفسها، أو وجود فجوات بين البلوكات المتجاورة).
حفظ البيانات في قاعدة البيانات: حفظ البيانات النظيفة في الجداول المخصصة لها (gis.streets, gis.blocks).
المرحلة الثانية: تطوير خدمة القرار المساحي الذكية (تطوير للخطة السابقة)
الهدف: دمج البيانات الجغرافية الجديدة في دورة عمل القرار المساحي لجعلها أكثر دقة وأتمتة.
المهمة 2.1: تحديث بوابة تقديم الطلبات
الوصف: جعل عملية تحديد الموقع أكثر ذكاءً.
الإجراءات:
عندما يحدد المواطن موقع أرضه على الخريطة، يقوم النظام تلقائياً بتحديد (المحافظة، المديرية، العزلة، وحدة الجوار، والبلوك) التي تقع فيها الأرض باستخدام تحليل Point-in-Polygon.
يقوم النظام بعرض هذه المعلومات للمواطن للتأكيد.
المهمة 2.2: تحديث تطبيق المساح الميداني
الوصف: تزويد المساح بسياق جغرافي كامل في الميدان.
الإجراءات:
عند استلام مهمة، يتم تحميل حدود (وحدة الجوار، البلوكات، والشوارع) المحيطة بموقع الطلب تلقائياً على خريطة التطبيق كطبقات مرجعية.
يستطيع المساح الآن رؤية موقعه بالنسبة للشوارع والبلوكات المرقمنة، مما يزيد من دقة عمله.
المهمة 2.3: تطوير نظام المراجعة الفنية الذكي (تطوير كبير)
الوصف: أتمتة عملية التحقق من الامتثال للمخططات.
الإجراءات:
المطابقة التلقائية: عند رفع المساح لبيانات قطعة الأرض، يقوم النظام تلقائياً بمقارنة حدودها مع:
حدود الشوارع المرقمنة من المخططات القديمة.
حدود البلوك الذي تقع فيه.
كشف التجاوزات: يقوم النظام بتظليل أي تجاوزات على الشوارع أو على أراضي الجيران وعرضها للمراجع الفني.
واجهة المقارنة بين المخطط والواقع: تعرض الواجهة للمراجع طبقتين: الوضع المخطط (من رقمنة المخططات القديمة) و الوضع القائم (من رفع المساح)، مما يسهل اتخاذ القرار.
حساب الارتدادات التلقائي: بناءً على عرض الشارع المرقمن، يقوم النظام بحساب وتوصية الارتداد القانوني المطلوب.



المرحلة الثالثة: المراجعة الفنية والاعتماد (4-6 أيام)
3.1 نظام المراجعة الفنية
 واجهة المراجع الفني.
 ✨ أدوات تحليل البيانات المساحية (GIS Tools):
واجهة المقارنة المرئية: عرض طبقتين على الخريطة: الأولى هي حدود الأرض كما رفعها المساح، والثانية هي حدودها حسب المخطط التنظيمي، مع تظليل أي تداخلات أو تجاوزات.
التحقق التلقائي: يقوم النظام تلقائياً بالتحقق من أن مساحة الأرض المرفوعة لا تتجاوز المساحة المسجلة في وثيقة الملكية بنسبة معينة.
 إضافة تعليقات وطلب تعديلات.
3.2 عملية الاعتماد
 مراجعة نهائية من المشرف.
 ✨ توليد القرار المساحي التلقائي (PDF Generation): عند الضغط على "اعتماد"، يقوم الخادم بجمع كل البيانات (الخرائط، جداول الإحداثيات، الاشتراطات) وتوليد ملف PDF رسمي.
 ✨ التوقيع الإلكتروني والختم الرقمي: دمج مكتبة لإضافة توقيع إلكتروني مشفر وختم زمني للقرار لضمان عدم التلاعب به.
 أرشفة تلقائية.
3.3 التصحيحات والتعديلات
 نظام إرجاع للتصحيح.
 تتبع التعديلات المطلوبة.
 إعادة الإرسال بعد التصحيح.
 ✨ سجل تدقيق كامل (Full Audit Trail): تسجيل كل تغيير يتم على الطلب في جدول audit_logs (من قام بالتغيير، متى، وما هو التغيير).



المرحلة الرابعة وما بعدها:
بقية المراحل التي وضعتها في خطتك السابقة (التكامل، لوحات التحكم، الأمان، النشر) تظل كما هي، ولكنها ستستفيد بشكل هائل من هذا الأساس الجغرافي القوي. على سبيل المثال:
لوحات التحكم: ستتمكن من عرض خرائط حرارية للمخالفات على مستوى الأحياء والبلوكات بدقة.
التكامل الحكومي: يمكن مشاركة طبقات الشوارع والبلوكات مع جهات أخرى (مثل الدفاع المدني، الكهرباء) بسهولة عبر خدمات الويب الجغرافية (WMS/WFS).


قط إضافة تفصيلية صغيرة للمرحلة السادسة:
6.1 الأمان المتقدم
 مراجعة شاملة للأمان.
 اختبار اختراق.
 ✨ تفعيل سياسة أمان المحتوى (CSP - Content Security Policy): لمنع هجمات XSS.
 ✨ حماية ضد هجمات CSRF: باستخدام التوكنات.
 تشفير البيانات الحساسة.
 نسخ احتياطية آمنة.
الخلاصة:
خطتك الأصلية كانت قوية جداً. التعديلات المقترحة تركز على تعميق الجانب التقني من خلال:
الأتمتة الجغرافية: الاستفادة القصوى من PostGIS لمعالجة البيانات بدلاً من الاعتماد على الإدخال اليدوي.
تحسين تدفق البيانات: ضمان أن البيانات تتدفق بسلاسة وأمان من الواجهة الأمامية إلى الخلفية، مع التحقق من صحتها في كل خطوة.
تعزيز الأمان: إضافة طبقات أمان إضافية على مستوى التطبيق والشبكة.
تجربة مستخدم أذكى: جعل الواجهات لا تعرض البيانات فقط، بل تتفاعل معها وتقدم اقتراحات ذكية للمستخدم.
بهذه الخطة المطورة، ستكون خدمة "القرار المساحي" لديك ليس فقط مكتملة وظيفياً، بل أيضاً متفوقة تقنياً.





























# الخطة التنفيذية الشاملة لإتمام خدمة "القرار المساحي" 🏗️

## نظرة عامة على الإنجازات الحالية

### ✅ الإنجازات المحققة حتى الآن

1. **البنية التحتية الأساسية**
   - مخطط قاعدة بيانات متكامل للقرارات المساحية
   - نظام Authentication و RBAC متقدم مع 2FA
   - REST APIs متكاملة لجميع العمليات المساحية

2. **الواجهات الأساسية**
   - نموذج طلب القرار المساحي التفاعلي (4 مراحل)
   - تطبيق المساح الميداني المتقدم
   - لوحة تحكم المساحة لإدارة الطلبات

3. **المكونات الفنية**
   - رفع النقاط والخطوط والمضلعات المساحية
   - تصدير البيانات (CSV, GeoJSON, KML)
   - النسخ الاحتياطية والمزامنة التلقائية

---

## 🎯 خطة الإتمام النهائي - 7 مراحل

### **المرحلة الأولى: تصحيح وتثبيت البنية الأساسية (3-5 أيام)**

#### 1.1 إصلاح قاعدة البيانات
- [ ] مطابقة مخطط Drizzle مع القاعدة الموجودة
- [ ] إضافة العواميد المفقودة بأمان
- [ ] إنشاء بيانات تجريبية واقعية للاختبار
- [ ] تشغيل جميع migrations بنجاح

#### 1.2 تثبيت الواجهات الحالية
- [ ] إصلاح جميع أخطاء الاستيراد والبناء
- [ ] ضمان عمل جميع الصفحات بدون أخطاء
- [ ] اختبار التنقل بين جميع المكونات
- [ ] تحسين الأداء وأوقات التحميل

#### 1.3 التحقق من API endpoints
- [ ] اختبار جميع APIs باستخدام curl
- [ ] ضمان صحة البيانات المُرسلة والمُستقبلة
- [ ] إضافة logging شامل للتتبع
- [ ] تحسين معالجة الأخطاء

---

### **المرحلة الثانية: إكمال دورة العمل الكاملة (5-7 أيام)**

#### 2.1 نماذج الطلبات المتقدمة
- [ ] نموذج طلب محسّن مع validation متقدم
- [ ] رفع المستندات المطلوبة (ملكية، هوية، إضافية)
- [ ] تحديد الموقع التقريبي على الخريطة
- [ ] حفظ مسودات والعودة لاحقاً

#### 2.2 نظام التعيين الذكي
- [ ] قائمة المساحين المعتمدين
- [ ] تعيين تلقائي بناءً على الموقع والحِمل
- [ ] نظام إشعارات للمساحين
- [ ] تتبع حالة المساح (متاح/مشغول)

#### 2.3 تطبيق المساح المتكامل
- [ ] واجهة تسجيل دخول للمساحين
- [ ] استقبال المهام المُعيّنة
- [ ] أدوات مساحية متقدمة (GPS عالي الدقة)
- [ ] رفع البيانات مع الصور والملاحظات
- [ ] العمل offline مع مزامنة لاحقة

---

### **المرحلة الثالثة: المراجعة الفنية والاعتماد (4-6 أيام)**

#### 3.1 نظام المراجعة الفنية
- [ ] واجهة المراجع الفني
- [ ] أدوات تحليل البيانات المساحية
- [ ] التحقق من دقة القياسات
- [ ] إضافة تعليقات وطلب تعديلات

#### 3.2 عملية الاعتماد
- [ ] مراجعة نهائية من المشرف
- [ ] إصدار القرار المساحي الرسمي
- [ ] توقيع إلكتروني وختم
- [ ] أرشفة تلقائية

#### 3.3 التصحيحات والتعديلات
- [ ] نظام إرجاع للتصحيح
- [ ] تتبع التعديلات المطلوبة
- [ ] إعادة الإرسال بعد التصحيح
- [ ] تاريخ كامل للتغييرات

---

### **المرحلة الرابعة: التكامل والإشعارات (3-4 أيام)**

#### 4.1 نظام الإشعارات المتقدم
- [ ] إشعارات فورية للمواطنين
- [ ] إشعارات SMS و Email
- [ ] تنبيهات push للتطبيق المحمول
- [ ] إشعارات للجهات ذات العلاقة

#### 4.2 تكامل الجهات الحكومية
- [ ] ربط مع السجل المدني
- [ ] تكامل مع أمانة العاصمة
- [ ] مشاركة مع الدفاع المدني
- [ ] إشعار شركات المرافق

#### 4.3 نظام الدفع الإلكتروني
- [ ] حساب الرسوم تلقائياً
- [ ] بوابات دفع متعددة
- [ ] إصدار فواتير إلكترونية
- [ ] تتبع حالة الدفع

---

### **المرحلة الخامسة: لوحات التحكم المتقدمة (4-5 أيام)**

#### 5.1 لوحة المواطن المحسّنة
- [ ] تتبع شامل لجميع طلباتهم
- [ ] timeline تفاعلي للطلب
- [ ] إحصائيات شخصية
- [ ] تحميل الوثائق النهائية

#### 5.2 لوحة الموظف الذكية
- [ ] إدارة المهام اليومية
- [ ] تقارير الأداء
- [ ] إحصائيات العمل
- [ ] أدوات التعاون

#### 5.3 لوحة الإدارة الشاملة
- [ ] إحصائيات النظام
- [ ] خرائط حرارية للطلبات
- [ ] تحليل الأداء
- [ ] تقارير إدارية تفصيلية

---

### **المرحلة السادسة: التحسين والأمان (3-4 أيام)**

#### 6.1 الأمان المتقدم
- [ ] مراجعة شاملة للأمان
- [ ] اختبار اختراق
- [ ] تشفير البيانات الحساسة
- [ ] نسخ احتياطية آمنة

#### 6.2 تحسين الأداء
- [ ] تحليل الأداء
- [ ] تحسين قواعد البيانات
- [ ] ضغط الصور والملفات
- [ ] CDN للمحتوى الثابت

#### 6.3 مراقبة النظام
- [ ] نظام monitoring متقدم
- [ ] تنبيهات الأخطاء
- [ ] logs تفصيلية
- [ ] تتبع استخدام الموارد

---

### **المرحلة السابعة: الاختبار والنشر (5-7 أيام)**

#### 7.1 الاختبار الشامل
- [ ] اختبار جميع المسارات
- [ ] اختبار الأحمال العالية
- [ ] اختبار الأجهزة المختلفة
- [ ] اختبار تجربة المستخدم

#### 7.2 التدريب والتوثيق
- [ ] دليل المستخدم النهائي
- [ ] دليل الموظفين
- [ ] دليل المساحين
- [ ] فيديوهات تدريبية

#### 7.3 النشر المرحلي
- [ ] نشر تجريبي محدود
- [ ] جمع التغذية الراجعة
- [ ] تطبيق التحسينات
- [ ] النشر الكامل

---

## 📊 مؤشرات النجاح المستهدفة

### مؤشرات الأداء الفنية
- ⚡ وقت استجابة أقل من 2 ثانية
- 🔒 نسبة أمان 99.9%
- 📱 توافق 100% مع جميع الأجهزة
- ⬆️ uptime 99.9%

### مؤشرات تجربة المستخدم
- 😊 رضا العملاء 4.5/5
- ⏱️ تقليل وقت المعاملة 70%
- 📈 زيادة الاستخدام 40%
- 🎯 معدل إتمام المعاملات 95%

### مؤشرات الأعمال
- 💰 تقليل التكاليف التشغيلية 50%
- 📋 تقليل الأخطاء 80%
- ⚡ تسريع العمليات 60%
- 🏛️ تحسين الشفافية 40%

---

## 🔧 الموارد والأدوات المطلوبة

### الموارد البشرية
- **مطور full-stack رئيسي** (أنت)
- **مصمم UI/UX** (اختياري للتحسينات)
- **مختص أمان** (للمراجعة النهائية)
- **مختص مساحة** (للتحقق من صحة العمليات)

### البنية التقنية
- ✅ Replit Pro (متوفر)
- ✅ PostgreSQL Database (متوفر)
- 🔄 خدمة الإشعارات (مطلوب تجهيز)
- 🔄 خدمة الخرائط (Google Maps/OpenStreetMap)

### الأدوات الإضافية
- 📧 خدمة Email (SendGrid/SES)
- 📱 خدمة SMS (Twilio)
- 💳 بوابة دفع (Stripe/PayPal)
- ☁️ خدمة تخزين الملفات (AWS S3)

---

## ⏰ الجدول الزمني التقديري

| المرحلة | المدة | التاريخ المتوقع |
|---------|--------|-----------------|
| 1️⃣ تثبيت البنية | 3-5 أيام | الأسبوع الأول |
| 2️⃣ دورة العمل | 5-7 أيام | الأسبوع الثاني |
| 3️⃣ المراجعة والاعتماد | 4-6 أيام | الأسبوع الثالث |
| 4️⃣ التكامل | 3-4 أيام | الأسبوع الرابع |
| 5️⃣ لوحات التحكم | 4-5 أيام | الأسبوع الخامس |
| 6️⃣ التحسين والأمان | 3-4 أيام | الأسبوع السادس |
| 7️⃣ الاختبار والنشر | 5-7 أيام | الأسبوع السابع |

**إجمالي المدة المتوقعة: 6-8 أسابيع**

---

## 🚀 الخطوات التنفيذية الفورية

### اليوم الأول - الآن:
1. ✅ إصلاح مشكلة قاعدة البيانات
2. ✅ تشغيل النظام بدون أخطاء
3. ✅ إنشاء بيانات تجريبية أولية
4. ✅ اختبار الواجهات الأساسية

### الأيام القادمة:
1. 🔄 إكمال جميع CRUD operations
2. 🔄 تحسين واجهة المستخدم
3. 🔄 إضافة المزيد من البيانات التجريبية
4. 🔄 اختبار مكثف للنظام

---

## 💡 توصيات استراتيجية

### للمرحلة القادمة:
1. **التركيز على التجربة**: جعل النظام بديهياً وسهل الاستخدام
2. **الأمان أولاً**: ضمان حماية البيانات الحساسة
3. **التوثيق الكامل**: إنشاء أدلة شاملة للمستخدمين
4. **التدريب المكثف**: ضمان تأهيل جميع المستخدمين

### للنجاح طويل الأمد:
1. **المراقبة المستمرة**: تتبع الأداء والأخطاء
2. **التحسين التدريجي**: تطوير مستمر بناءً على التغذية الراجعة  
3. **التوسع التدريجي**: إضافة خدمات جديدة تدريجياً
4. **الشراكات الاستراتيجية**: تعاون مع الجهات الحكومية

---