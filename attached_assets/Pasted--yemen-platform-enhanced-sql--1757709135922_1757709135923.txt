الخلاصة الرئيسية التي توصلنا إليها الآن:

الأساس موجود: قاعدة بيانات yemen_platform_enhanced.sql تحتوي بالفعل على الهيكل الجغرافي الأساسي مع PostGIS.
المنطق موجود: الواجهة الخلفية تحتوي على محركات شبه جاهزة للخدمات الديناميكية وسير العمل.
الاستثمار محفوظ: الغالبية العظمى من الكود (85-90%)، خاصة في الواجهة الأمامية والمنطق التجاري، قابلة لإعادة الاستخدام بالكامل.
المشكلة: المكونات منفصلة وغير مترابطة. مخطط قاعدة البيانات الذي يستخدمه التطبيق فعليًا (shared/schema.ts) لا يستغل الإمكانيات الكاملة الموجودة في yemen_platform_enhanced.sql.
بناءً على هذه الرؤية الجديدة والأكثر دقة، قمت بإعداد خطة عمل محدثة ونهائية، تتبنى استراتيجية "الدمج الذكي" المقترحة.

خطة العمل المعتمدة والمُحسَّنة: استراتيجية الدمج الذكي لتفعيل بنية LBAC
المبدأ الاستراتيجي: الحفاظ على 95% من الكود الحالي، والتركيز على 5% من العمل الهندسي الذي يمثل "الغراء" الذي يربط المكونات الموجودة معًا ويضيف القطع المفقودة لتفعيل نظام LBAC.

المرحلة الأولى: دمج وتوحيد المخطط (Schema Unification) - (الأولوية القصوى: 2-3 أسابيع)
الهدف: إنشاء مخطط قاعدة بيانات واحد، موحد، وشامل يستفيد من كل ما هو موجود ويضيف النواقص.

المهمة 1.1 (حرجة): سأقوم أولاً بقراءة وتحليل ملف shared/schema.ts لفهم المخطط الذي يستخدمه التطبيق حاليًا.
المهمة 1.2: إنشاء ملف مخطط Drizzle جديد وموحد (unified_schema.ts) يدمج تعريفات الجداول من shared/schema.ts مع الجداول الجغرافية من yemen_platform_enhanced.sql.
المهمة 1.3: إضافة الجداول المفقودة إلى المخطط الموحد: geo.plots, geo.streets, org.branches, وجداول الربط org.branch_coverage_areas و org.employee_scopes.
المهمة 1.4: تحديث إعدادات Drizzle (drizzle.config.ts) ليشير إلى ملف المخطط الموحد الجديد.
المهمة 1.5: تنفيذ أمر drizzle-kit push لتطبيق هذا المخطط الجديد على قاعدة البيانات، مما سيقوم بإنشاء أو تعديل الجداول بشكل آلي.
المرحلة الثانية: إعادة بناء طبقة البيانات وتفعيل LBAC (Data Layer Refactoring) - (3 أسابيع)
الهدف: تعديل "غرفة المحركات" في الواجهة الخلفية لتصبح مدركة للموقع الجغرافي.

المهمة 2.1 (إعادة كتابة مركزة): تحديث شامل لملف server/storage.ts.
المهمة 2.2: تعديل دوال جلب البيانات (مثل getApplications) لتقوم تلقائيًا بفلترة النتائج بناءً على النطاق الجغرافي للمستخدم (عبر ST_Intersects).
المهمة 2.3: كتابة سكربت لمرة واحدة لترحيل البيانات: قراءة بيانات المواقع من حقول jsonb في الطلبات الحالية ونقلها إلى جدول geo.plots الجديد وربطها بالطلبات.
المرحلة الثالثة: تفعيل الواجهات الأمامية (Frontend Activation) - (2 أسابيع)
الهدف: جني ثمار العمل في الواجهات دون تغييرات كبيرة.

المهمة 3.1: بناء واجهات الإدارة الجديدة (لإدارة الفروع، وتعيين النطاقات الجغرافية للموظفين).
المهمة 3.2 (التحقق): اختبار صفحة حالية مثل "لوحة تحكم المهندس". من المفترض أن تعمل الصفحة بشكل صحيح وتعرض البيانات المفلترة جغرافيًا بدون أي تعديل على كود الواجهة الأمامية، لأن الذكاء أصبح في الواجهة الخلفية.
المهمة 3.3: تحسين واجهة تقديم الطلب لتستخدم خريطة تفاعلية لاختيار قطعة الأرض (plot) بدلاً من الإدخال اليدوي.
